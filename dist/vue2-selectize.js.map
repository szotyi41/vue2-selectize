{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue2-selectize.js","webpack:///webpack/bootstrap f004c06b4c0e81ace141","webpack:///external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}","webpack:///main.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/main.vue?13c5","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/microplugin/src/microplugin.js","webpack:///./~/selectize/dist/js/selectize.js","webpack:///./~/sifter/sifter.js","webpack:///./src/main.vue"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","clean","options","map","option","text","_typeof","Symbol","iterator","constructor","_extends","assign","target","arguments","length","source","key","_jquery","_jquery2","_deepEqual","_deepEqual2","selectize","props","settings","type","labelField","valueField","disabled","Boolean","Array","data","element","currentOptions","createdOptions","focus","inputText","items","lastOptions","mounted","_this","self","$refs","select","log","create","input","callback","push","slideToggle","onDropdownOpen","onDropdownClose","$dropdown","undefined","dropdownElement","find","hide","slideDown","fadeIn","show","slideUp","fadeOut","disableItemRemove","onItemRemove","setItems","val","onInitialize","setValue","onChange","$emit","onFocus","param","onBlur","setOptions","addOptions","addOptionsIfNotExists","addOptionIfNotExists","addItems","addItem","disableTriggerOnChange","enableTriggerOnChange","selectOnlyOneItem","makeOptions","toggleDisabled","on","e","createOnEnter","keyCode","preventDefault","destroyed","destroy","watch","_value","_x3","_x4","apply","toString","old","isArray","removedItem","filter","a","_disabled","_focus","_this2","createOnBlur","_options","methods","disable","enable","_this3","justLocal","_new","nodes","$slots","node","tag","toLowerCase","children","trim","domProps","attrs","concat","clearOptions","optionValues","keys","every","v","forEach","removeOption","addOption","refreshOptions","forceAdding","_this4","_this5","findOldOption","oldOption","force","clearItems","_this6","item","removeAllOptionsExcept","getValueFromOptions","removeItem","notRemovableOptions","optionsAfterFilter","optionToRemoveIds","indexOf","removeOptions","_removeOptions","values","_this7","found","addItemAsOption","setFocus","setBlur","blur","text2","text3","debug","console","oldOnChange","triggerOnChange","JSON","stringify","setOptionGroups","optgroups","optgroupId","optgroupValueField","clearOptionGroups","optgroup","addOptionGroup","beforeUpdate","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","computed","_vm","_h","$createElement","_self","_c","ref","_t","isUndefinedOrNull","isBuffer","x","copy","slice","objEquiv","b","opts","isArguments","pSlice","deepEqual","ka","objectKeys","kb","sort","actual","expected","Date","getTime","strict","supported","unsupported","propertyIsEnumerable","supportsArgumentsClass","shim","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","shift","loadPlugin","plugin","Error","fn","vArg","__WEBPACK_AMD_DEFINE_ARRAY__","$","Sifter","highlight","$element","pattern","regex","RegExp","skip","nodeType","pos","search","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","each","removeHighlight","firstChild","nodeName","parent","normalize","end","MicroEvent","event","fct","_events","off","splice","trigger","destObject","IS_MAC","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","validity","isset","hash_key","escape_html","str","replace","hook","before","method","original","after","result","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","watchChildEvent","$parent","selector","child","currentTarget","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","Selectize","$testInput","position","top","left","width","padding","whiteSpace","appendTo","autoGrow","$input","currentWidth","update","printable","placeholder","character","metaKey","altKey","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","tmp","innerHTML","dir","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","userOptions","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","message","error","component","explanation","group","groupEnd","$wrapper","$control","$control_input","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","stopImmediatePropagation","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","paste","onPaste","has","revertSettings","$children","detach","tabindex","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","preload","field_label","field_optgroup","optgroupLabelField","templates","html","optgroup_header","escape","option_create","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","$target","hasClass","closeAfterSelect","lastQuery","getOption","loadingClass","results","Math","max","removeClass","getValue","silent","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","query","getSearchOptions","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","calculateScore","score","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","$order","dom","tokens","canCreate","prepend","addPrecedence","removeOptionGroup","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","getElementWithValue","$options","index","eq","$els","getAttribute","buffer","isPending","control","insertBefore","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","label","removeAttr","visibility","display","getBoundingClientRect","$el","el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","removeData","body","templateName","cache","disabledField","clearCache","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_disabled","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","parse","init_select","optionsMap","readData","arr","$optgroup","tag_name","support","sortable","forcePlaceholderSize","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","html_container","html_element","context","render_item","tokenize","letter","words","escape_regex","DIACRITICS","string","is_array","token_count","prepareSearch","scoreValue","token","scoreObject","field_count","getattr","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","f","g","h","q","r","t","u","w","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Component"],"mappings":"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","file":"vue2-selectize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _deepEqual = __webpack_require__(4);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!(0, _jquery2.default)().selectize) {\n\t__webpack_require__(8);\n}\n\nfunction clean(options) {\n\treturn options.map(function (option) {\n\t\treturn {\n\t\t\ttext: option.text,\n\t\t\tvalue: option.value\n\t\t};\n\t});\n}\n\nexports.default = {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: function _default() {\n\t\t\t\treturn {\n\t\t\t\t\tlabelField: 'text',\n\t\t\t\t\tvalueField: 'value'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata: function data() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: [],\n\t\t\toptions: [],\n\t\t\tlastOptions: []\n\t\t};\n\t},\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tvar self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\t\tif (this.settings.create) {\n\t\t\tvar create = this.settings.create;\n\t\t\tthis.settings.create = function (input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tvar option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.slideToggle) {\n\t\t\tvar onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tvar onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tif (self.element) {\n\t\t\t\t\tvar dropdownElement = (0, _jquery2.default)(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement.hide().slideDown('fast').fadeIn('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tif (self.element) {\n\t\t\t\t\tvar dropdownElement = (0, _jquery2.default)(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement.show().slideUp('fast').fadeOut('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tvar onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function (value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t(0, _jquery2.default)(this.element).selectize(_extends({\n\t\t\tonInitialize: function onInitialize() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: function onChange(value) {\n\t\t\t\t_this.$emit('input', value);\n\t\t\t\tif (_this.settings.onChange) _this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: function onFocus(param) {\n\t\t\t\t_this.focus = true;\n\t\t\t\tif (_this.settings.onFocus) _this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: function onBlur(param) {\n\t\t\t\t_this.focus = false;\n\t\t\t\tif (_this.settings.onBlur) _this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange,\n\t\t\tselectOnlyOneItem: this.selectOnlyOneItem\n\t\t}, this.settings));\n\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t(0, _jquery2.default)(this.element).find('input').on('input', function (e) {\n\t\t\t_this.inputText = e.target.value;\n\n\t\t\tif (_this.inputText.length && _this.settings.createOnEnter && e.keyCode === 13 && _this.focus && _this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.settings.create(_this.inputText, function () {\n\t\t\t\t\t_this.addItem(_this.inputText, true);\n\t\t\t\t\t_this.log('Item added: ' + _this.inputText);\n\t\t\t\t});\n\t\t\t\t_this.log('Add item: ' + _this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed: function destroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t},\n\n\twatch: {\n\t\tvalue: function (_value) {\n\t\t\tfunction value(_x3, _x4) {\n\t\t\t\treturn _value.apply(this, arguments);\n\t\t\t}\n\n\t\t\tvalue.toString = function () {\n\t\t\t\treturn _value.toString();\n\t\t\t};\n\n\t\t\treturn value;\n\t\t}(function (value, old) {\n\t\t\tif (!(0, _deepEqual2.default)(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tvar removedItem = old.filter(function (e) {\n\t\t\t\t\treturn !value.find(function (a) {\n\t\t\t\t\t\treturn e == a;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t}),\n\t\tdisabled: function disabled(_disabled) {\n\t\t\tthis.toggleDisabled(_disabled);\n\t\t},\n\t\tfocus: function focus(_focus) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (_focus === false) {\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, function () {\n\t\t\t\t\t\t_this2.addItem(_this2.inputText, true);\n\t\t\t\t\t\t_this2.log('Item added: ' + _this2.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\toptions: function options(_options) {\n\t\t\tthis.setOptions(_options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled: function toggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.element.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.element.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions: function makeOptions() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar justLocal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t\tvar old = this.currentOptions;\n\t\t\tvar _new = [];\n\t\t\tvar nodes = this.$slots.default;\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes.filter(function (node) {\n\t\t\t\t\treturn node.tag && node.tag.toLowerCase() === 'option';\n\t\t\t\t}).map(function (node) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t};\n\t\t\t\t}).concat(this.createdOptions);\n\t\t\t}\n\t\t\tif (!(0, _deepEqual2.default)(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new;\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\t\tvar optionValues = this.currentOptions.map(function (o) {\n\t\t\t\t\t\treturn o.value;\n\t\t\t\t\t});\n\t\t\t\t\tObject.keys(this.element.selectize.options).map(function (key) {\n\t\t\t\t\t\treturn _this3.element.selectize.options[key];\n\t\t\t\t\t}).filter(function (option) {\n\t\t\t\t\t\treturn optionValues.every(function (v) {\n\t\t\t\t\t\t\treturn !(0, _deepEqual2.default)(v, option.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).forEach(function (option) {\n\t\t\t\t\t\treturn _this3.element.selectize.removeOption(option.value);\n\t\t\t\t\t});\n\t\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue: function setValue(value) {\n\t\t\tvar forceAdding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding || forceAdding === true) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.element.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tclearOptions: function clearOptions() {\n\t\t\treturn this.setOptions([]);\n\t\t},\n\t\tsetOptions: function setOptions(options) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar items = this.value;\n\n\t\t\tthis.currentOptions = options;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.element.selectize.clearOptions();\n\t\t\toptions.forEach(function (option) {\n\t\t\t\treturn _this4.element.selectize.addOption(option);\n\t\t\t});\n\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\tthis.setValue();\n\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\taddOptions: function addOptions(options) {\n\t\t\tvar _this5 = this;\n\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(function (option) {\n\t\t\t\t\treturn _this5.element.selectize.addOption(option);\n\t\t\t\t});\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\tthis.addOption(options);\n\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\taddOption: function addOption(option) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\t\t\tvar findOldOption = this.currentOptions.find(function (oldOption) {\n\t\t\t\treturn oldOption[valueField] === option[valueField];\n\t\t\t});\n\n\t\t\tif (findOldOption) {\n\t\t\t\tthis.element.selectize.removeOption(findOldOption[valueField]);\n\t\t\t}\n\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\tthis.element.selectize.refreshOptions(false);\n\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\tsetItems: function setItems(items) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.element.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\tthis.enableTriggerOnChange();\n\n\t\t\treturn this.items;\n\t\t},\n\t\taddItems: function addItems(items) {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(function (item) {\n\t\t\t\t\treturn _this6.addItem(items);\n\t\t\t\t});\n\n\t\t\t\treturn this.items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\n\t\t\treturn this.items;\n\t\t},\n\t\taddItem: function addItem(value) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n\t\t\tif (force) {\n\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t}\n\n\t\t\tif (this.settings.selectOnlyOneItem === true) {\n\t\t\t\tthis.removeAllOptionsExcept(items);\n\t\t\t}\n\n\t\t\tvalue = this.getValueFromOptions(value);\n\n\t\t\tthis.element.selectize.addItem(value);\n\n\t\t\tthis.items = this.items.concat(value);\n\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem: function removeItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\tremoveAllOptionsExcept: function removeAllOptionsExcept(notRemovableOptions) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\t\tnotRemovableOptions = Array.isArray(notRemovableOptions) ? notRemovableOptions : [notRemovableOptions];\n\n\t\t\tvar notRemovableOptionIds = notRemovableOptions.map(function (option) {\n\t\t\t\tif ((typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && !Array.isArray(option)) {\n\t\t\t\t\treturn option[valueField];\n\t\t\t\t}\n\n\t\t\t\treturn option;\n\t\t\t});\n\n\t\t\tvar optionsAfterFilter = this.currentOptions.filter(function (option) {\n\t\t\t\treturn optionToRemoveIds.indexOf(option[valueField]) === -1;\n\t\t\t});\n\n\t\t\tthis.setOptions(optionsAfterFilter);\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\tremoveOptions: function removeOptions(_removeOptions) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\t\t_removeOptions = Array.isArray(_removeOptions) ? _removeOptions : [_removeOptions];\n\n\t\t\tvar optionToRemoveIds = _removeOptions.map(function (option) {\n\t\t\t\tif ((typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && !Array.isArray(option)) {\n\t\t\t\t\treturn option[valueField];\n\t\t\t\t}\n\n\t\t\t\treturn option;\n\t\t\t});\n\n\t\t\tvar optionsAfterFilter = this.currentOptions.filter(function (option) {\n\t\t\t\treturn optionToRemoveIds.indexOf(option[valueField]) !== -1;\n\t\t\t});\n\n\t\t\tthis.setOptions(optionsAfterFilter);\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\taddOptionsIfNotExists: function addOptionsIfNotExists(values) {\n\t\t\tvar _this7 = this;\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalues.forEach(function (value) {\n\t\t\t\t\treturn _this7.addOptionIfNotExists(value);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.addOptionIfNotExists(values);\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists: function addOptionIfNotExists(value) {\n\t\t\tvar found = false;\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\t\tif (!value && !value.trim()) {\n\t\t\t\tthis.log('Value is empty when adding option');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currentOptions.forEach(function (option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tthis.log('Value is already added to options');\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (found === true) return value;\n\n\t\t\tvar option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption: function addItemAsOption(option) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\t\tthis.element.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus: function setFocus() {\n\t\t\tthis.element.selectize.focus();\n\t\t},\n\t\tsetBlur: function setBlur() {\n\t\t\tthis.element.selectize.blur();\n\t\t},\n\t\tlog: function log(text) {\n\t\t\tvar text2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t\t\tvar text3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n\t\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t\t},\n\t\tdisableTriggerOnChange: function disableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = function () {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange: function enableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function () {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\tgetValueFromOptions: function getValueFromOptions(value) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\tif (!this.currentOptions.find(function (option) {\n\t\t\t\treturn option[valueField] == value;\n\t\t\t})) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tsetOptionGroups: function setOptionGroups(optgroups) {\n\t\t\tvar self = this;\n\t\t\tvar optgroupId = self.settings.optgroupValueField || 'id';\n\t\t\tif (Array.isArray(optgroups)) {\n\t\t\t\tself.selectize.clearOptionGroups();\n\t\t\t\toptgroups.forEach(function (optgroup) {\n\t\t\t\t\tself.selectize.addOptionGroup(optgroup[optgroupId], optgroup);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function beforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(6);\nvar isArguments = __webpack_require__(5);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),__webpack_require__(9),__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue2-selectize.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f004c06b4c0e81ace141","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}\n// module id = 0\n// module chunks = 0","<template>\n\t<select ref=\"select\"><slot/></select>\n</template>\n\n<script>\n/*\n * slideToggle <bool> - If its true the options will slide\n * disableTriggerOnChange <function> - If its called the onChange event will not called anymore\n * enableTriggerOnChange <function> - If its called the onChange event will callend again\n * onItemRemove <function(items, removedItem)> - This function called when an item removed\n * setFocus <function>\n * setBlur <function>\n * setValue <function (value)>\n * setOptions <function (array or object of option)>\n * addOptions <function (array or object of option)>\n * addOption <function (object of option)>\n * setItems <function (object of items, if its true its added when option is not exists)> - Remove all items and add\n * addItems <function (object of items, if its true its added when option is not exists)> - Just add items, not remove\n * addItem <function (item, if its true its added when option is not exists)>\n * addOptionsIfNotExists <function (options)>\n * addOptionIfNotExists <function (option)>\n * addItemAsOption <function (option)> - Add item (param will option not item) Option has value and text field\n * createOnEnter <bool> - Create will run when you press enter and text is not empty\n * createOnBlur <bool> - Create will run when you click outside and text is not empty\n * createIfNotExists <bool> - If push something in the model and not exists\n * debug <bool> - Enable debug mode\n * disableItemRemove\n\n * inputText - Text in input\n * element - Element of select\n * options - Options array\n * focus - If focused\n */\n\nimport $ from 'jquery';\nimport equal from 'deep-equal';\n\nif (!$().selectize) {\n\trequire('selectize');\n}\n\nfunction clean(options) {\n\treturn options.map(option => ({\n\t\ttext: option.text,\n\t\tvalue: option.value\n\t}));\n}\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({\n\t\t\t\tlabelField: 'text',\n\t\t\t\tvalueField: 'value'\n\t\t\t})\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: [],\n\t\t\toptions: [],\n\t\t\tlastOptions: []\n\t\t};\n\t},\n\tmounted() {\n\t\tlet self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\t\t// If create is bool\n\t\tif (this.settings.create) {\n\t\t\tlet create = this.settings.create;\n\t\t\tthis.settings.create = function(input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tlet option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\t// Slide toggle\n\t\tif (this.settings.slideToggle) {\n\t\t\tlet onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tlet onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function($dropdown = null) {\n\t\t\t\tif (self.element) {\n\t\t\t\t\tlet dropdownElement = $(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement\n\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t.slideDown('fast')\n\t\t\t\t\t\t\t.fadeIn('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function($dropdown = null) {\n\t\t\t\tif (self.element) {\n\t\t\t\t\tlet dropdownElement = $(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement\n\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t.slideUp('fast')\n\t\t\t\t\t\t\t.fadeOut('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t};\n\t\t}\n\n\t\t// If its true, the user cannot remove item\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tlet onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function(value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t// Init selectize\n\t\t$(this.element).selectize({\n\t\t\tonInitialize: function() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: value => {\n\t\t\t\tthis.$emit('input', value);\n\t\t\t\tif (this.settings.onChange) this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: param => {\n\t\t\t\tthis.focus = true;\n\t\t\t\tif (this.settings.onFocus) this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: param => {\n\t\t\t\tthis.focus = false;\n\t\t\t\tif (this.settings.onBlur) this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange,\n\t\t\tselectOnlyOneItem: this.selectOnlyOneItem,\n\t\t\t...this.settings\n\t\t});\n\n\t\t// At init\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t$(this.element)\n\t\t\t.find('input')\n\t\t\t.on('input', e => {\n\t\t\t\tthis.inputText = e.target.value;\n\n\t\t\t\t// Call create on enter\n\t\t\t\tif (this.inputText.length && this.settings.createOnEnter && e.keyCode === 13 && this.focus && this.settings.create) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdestroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t},\n\twatch: {\n\t\tvalue(value, old) {\n\t\t\tif (!equal(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\t// Call onItemRemove\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tlet removedItem = old.filter(e => !value.find(a => e == a));\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t},\n\t\tdisabled(disabled) {\n\t\t\tthis.toggleDisabled(disabled);\n\t\t},\n\t\tfocus(focus) {\n\t\t\tif (focus === false) {\n\t\t\t\t// Call create on blur\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Options from props\n\t\toptions(options) {\n\t\t\tthis.setOptions(options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.element.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.element.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions(justLocal = false) {\n\t\t\tlet old = this.currentOptions;\n\t\t\tlet _new = [];\n\t\t\tlet nodes = this.$slots.default;\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes\n\t\t\t\t\t.filter(node => node.tag && node.tag.toLowerCase() === 'option')\n\t\t\t\t\t.map(node => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.concat(this.createdOptions);\n\t\t\t}\n\t\t\tif (!equal(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new;\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\t\tlet optionValues = this.currentOptions.map(o => o.value);\n\t\t\t\t\tObject.keys(this.element.selectize.options)\n\t\t\t\t\t\t//IE11 fix, Object.values is not supported\n\t\t\t\t\t\t.map(key => this.element.selectize.options[key])\n\t\t\t\t\t\t.filter(option => optionValues.every(v => !equal(v, option.value)))\n\t\t\t\t\t\t.forEach(option => this.element.selectize.removeOption(option.value));\n\t\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue(value, forceAdding = false) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding || forceAdding === true) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.element.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tclearOptions() {\n\t\t\treturn this.setOptions([]);\n\t\t},\n\t\tsetOptions(options) {\n\t\t\t// Save selected items before clear options (like backup)\n\t\t\tlet items = this.value;\n\n\t\t\t// Set options value\n\t\t\tthis.currentOptions = options;\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Add options, clearOptions will remove items too\n\t\t\tthis.element.selectize.clearOptions();\n\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\n\t\t\t// Set items form backup\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\tthis.setValue();\n\n\t\t\t// Set last options, if more than 1\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.currentOptions;\n\t\t},\n\n\t\t// Add options if array\n\t\taddOptions(options) {\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\tthis.addOption(options);\n\n\t\t\t// Set last options, if more than 1\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\n\t\t// Add one option\n\t\taddOption(option) {\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\t\t\tlet findOldOption = this.currentOptions.find(oldOption => oldOption[valueField] === option[valueField]);\n\n\t\t\t// If option is already added, remove it to overwrite\n\t\t\tif (findOldOption) {\n\t\t\t\tthis.element.selectize.removeOption(findOldOption[valueField]);\n\t\t\t}\n\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\tthis.element.selectize.refreshOptions(false);\n\n\t\t\t// Set last options, if more than 1\n\t\t\tif (this.currentOptions && this.currentOptions.length) {\n\t\t\t\tthis.lastOptions = this.currentOptions;\n\t\t\t}\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\tsetItems(items, force = false) {\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Set items\n\t\t\tthis.element.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\n\t\t\treturn this.items;\n\t\t},\n\t\taddItems(items, force = false) {\n\n\t\t\t// If its array each in items\n\t\t\tif (Array.isArray(items)) {\n\n\t\t\t\t// Each in items and push it\n\t\t\t\titems.forEach(item => this.addItem(items));\n\n\t\t\t\t// Generated in addItem functon\n\t\t\t\treturn this.items;\n\t\t\t}\n\n\t\t\t// If its object insert it\n\t\t\tthis.addItem(items, force);\n\n\n\t\t\treturn this.items;\n\t\t},\n\t\taddItem(value, force = false) {\n\n\t\t\tif (force) {\n\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t}\n\n\t\t\tif (this.settings.selectOnlyOneItem === true) {\n\t\t\t\tthis.removeAllOptionsExcept(items);\n\t\t\t}\n\n\t\t\t// Search value from options\n\t\t\tvalue = this.getValueFromOptions(value);\n\n\t\t\t// Add item to selectize\n\t\t\tthis.element.selectize.addItem(value);\n\n\t\t\t// Set component variable\n\t\t\tthis.items = this.items.concat(value);\n\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\tremoveAllOptionsExcept(notRemovableOptions) {\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Convert remove options to array\n\t\t\tnotRemovableOptions = Array.isArray(notRemovableOptions) ? notRemovableOptions : [notRemovableOptions];\n\n\t\t\tvar notRemovableOptionIds = notRemovableOptions.map(option => {\n\n\t\t\t\t// If option is object, get valueField\n\t\t\t\tif (typeof option === 'object' && !Array.isArray(option)) {\n\t\t\t\t\treturn option[valueField];\n\t\t\t\t}\n\n\t\t\t\t// If its string or int or bool\n\t\t\t\treturn option;\n\n\t\t\t});\n\n\t\t\tvar optionsAfterFilter = this.currentOptions.filter(option => optionToRemoveIds.indexOf(option[valueField]) === -1);\n\t\t\t\n\n\t\t\t// Set filtered options\n\t\t\tthis.setOptions(optionsAfterFilter);\n\n\t\t\treturn this.currentOptions;\n\n\t\t},\n\t\tremoveOptions(removeOptions) {\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Convert remove options to array\n\t\t\tremoveOptions = Array.isArray(removeOptions) ? removeOptions : [removeOptions];\n\n\t\t\tvar optionToRemoveIds = removeOptions.map(option => {\n\n\t\t\t\t// If option is object, get valueField\n\t\t\t\tif (typeof option === 'object' && !Array.isArray(option)) {\n\t\t\t\t\treturn option[valueField];\n\t\t\t\t}\n\n\t\t\t\t// If its string or int or bool\n\t\t\t\treturn option;\n\n\t\t\t});\n\n\t\t\t// Filter options\n\t\t\tvar optionsAfterFilter = this.currentOptions.filter(option => optionToRemoveIds.indexOf(option[valueField]) !== -1);\n\n\t\t\t// Set filtered options\n\t\t\tthis.setOptions(optionsAfterFilter);\n\n\t\t\treturn this.currentOptions;\n\t\t},\n\t\taddOptionsIfNotExists(values) {\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalues.forEach(value => this.addOptionIfNotExists(value));\n\t\t\t} else {\n\t\t\t\treturn this.addOptionIfNotExists(values);\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists(value) {\n\t\t\tlet found = false;\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Check value is not empty\n\t\t\tif (!value && !value.trim()) {\n\t\t\t\tthis.log('Value is empty when adding option');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find by value\n\t\t\tthis.currentOptions.forEach(function(option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tthis.log('Value is already added to options');\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If option not exists add\n\t\t\tif (found === true) return value;\n\n\t\t\tlet option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption(option) {\n\t\t\t// Find option by valueField\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\t\tthis.element.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus() {\n\t\t\tthis.element.selectize.focus();\n\t\t},\n\t\tsetBlur() {\n\t\t\tthis.element.selectize.blur();\n\t\t},\n\t\tlog(text, text2 = '', text3 = '') {\n\t\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t\t},\n\t\tdisableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = function() {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function() {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\t// As value you can push a string and option object\n\t\t// If its string check is in options\n\t\t// If its object get the value\n\t\tgetValueFromOptions(value) {\n\t\t\t// Check value is an object\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t// Check value field is exists\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\t// Check option is exists\n\t\t\tif (!this.currentOptions.find(option => option[valueField] == value)) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\tsetOptionGroups(optgroups) {\n\t\t\tvar self = this;\n\t\t\tvar optgroupId = self.settings.optgroupValueField || 'id';\n\t\t\tif (Array.isArray(optgroups)) {\n\t\t\t\tself.selectize.clearOptionGroups();\n\t\t\t\toptgroups.forEach(function(optgroup) {\n\t\t\t\t\tself.selectize.addOptionGroup(optgroup[optgroupId], optgroup);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// main.vue?3562f2ce","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4787ef3e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/main.vue\n// module id = 3\n// module chunks = 0","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/index.js\n// module id = 4\n// module chunks = 0","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/is_arguments.js\n// module id = 5\n// module chunks = 0","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/keys.js\n// module id = 6\n// module chunks = 0","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/microplugin/src/microplugin.js\n// module id = 7\n// module chunks = 0","/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/selectize/dist/js/selectize.js\n// module id = 8\n// module chunks = 0","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sifter/sifter.js\n// module id = 9\n// module chunks = 0","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./main.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4787ef3e\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./main.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}