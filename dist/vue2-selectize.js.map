{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue2-selectize.js","webpack:///webpack/bootstrap 7704ff35c5503c4b8324","webpack:///external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}","webpack:///main.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/main.vue?13c5","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/microplugin/src/microplugin.js","webpack:///./~/selectize/dist/js/selectize.js","webpack:///./~/sifter/sifter.js","webpack:///./src/main.vue"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","clean","options","map","option","text","_extends","assign","target","arguments","length","source","key","_jquery","_jquery2","_deepEqual","_deepEqual2","selectize","props","settings","type","labelField","valueField","disabled","Boolean","Array","data","element","currentOptions","createdOptions","focus","inputText","items","mounted","_this","self","create","input","callback","log","$el","dataset","push","slideToggle","onDropdownOpen","onDropdownClose","$dropdown","undefined","hide","slideDown","fadeIn","show","slideUp","fadeOut","disableItemRemove","onItemRemove","setItems","val","onInitialize","setValue","onChange","$emit","onFocus","param","onBlur","setOptions","addOptions","addOptionsIfNotExists","addOptionIfNotExists","addItems","addItem","disableTriggerOnChange","enableTriggerOnChange","makeOptions","toggleDisabled","find","on","e","createOnEnter","keyCode","preventDefault","destroyed","destroy","watch","_value","old","isArray","removedItem","filter","a","_disabled","_focus","_this2","createOnBlur","_options","methods","disable","enable","_this3","justLocal","_new","nodes","$slots","node","tag","toLowerCase","children","trim","domProps","attrs","concat","clearOptions","optionValues","keys","every","v","forEach","removeOption","addOption","refreshOptions","forceAdding","_this4","_this5","force","clearItems","_this6","item","getValueFromOptions","removeItem","values","_this7","found","addItemAsOption","setFocus","setBlur","blur","debug","console","oldOnChange","triggerOnChange","JSON","stringify","beforeUpdate","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","computed","_vm","_h","$createElement","_self","_c","ref","_t","isUndefinedOrNull","isBuffer","x","copy","slice","objEquiv","b","opts","isArguments","pSlice","deepEqual","ka","objectKeys","kb","sort","actual","expected","Date","getTime","strict","supported","toString","unsupported","propertyIsEnumerable","supportsArgumentsClass","shim","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","shift","loadPlugin","plugin","Error","fn","apply","vArg","__WEBPACK_AMD_DEFINE_ARRAY__","$","Sifter","highlight","$element","pattern","regex","RegExp","skip","nodeType","pos","search","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","each","removeHighlight","firstChild","nodeName","parent","normalize","end","MicroEvent","event","fct","_events","off","splice","indexOf","trigger","destObject","IS_MAC","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","validity","isset","hash_key","escape_html","str","replace","hook","before","method","original","after","result","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","watchChildEvent","$parent","selector","child","currentTarget","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","$test","position","top","left","width","padding","whiteSpace","appendTo","remove","autoGrow","$input","currentWidth","update","printable","placeholder","character","metaKey","altKey","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","tmp","innerHTML","Selectize","dir","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","message","error","component","explanation","group","groupEnd","$wrapper","$control","$control_input","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","paste","onPaste","has","revertSettings","$children","detach","tabindex","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","preload","field_label","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option_create","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","$target","hasClass","closeAfterSelect","lastQuery","getOption","loadingClass","results","Math","max","removeClass","getValue","silent","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","query","getSearchOptions","sortField","field","fields","searchField","conjunction","searchConjunction","calculateScore","score","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","$order","dom","tokens","canCreate","prepend","addPrecedence","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","getElementWithValue","$options","index","eq","$els","getAttribute","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","label","removeAttr","visibility","display","outerWidth","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","removeData","body","templateName","cache","clearCache","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","parse","init_select","optionsMap","readData","arr","$optgroup","tag_name","support","sortable","forcePlaceholderSize","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","html_container","html_element","context","render_item","tokenize","letter","words","escape_regex","DIACRITICS","string","iterator","is_array","token_count","nesting","prepareSearch","scoreValue","token","scoreObject","field_count","getattr","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","f","g","h","q","r","t","u","w","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Component"],"mappings":"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","file":"vue2-selectize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _deepEqual = __webpack_require__(4);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!(0, _jquery2.default)().selectize) {\n\t__webpack_require__(8);\n}\n\nfunction clean(options) {\n\treturn options.map(function (option) {\n\t\treturn {\n\t\t\ttext: option.text,\n\t\t\tvalue: option.value\n\t\t};\n\t});\n}\n\nexports.default = {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: function _default() {\n\t\t\t\treturn {\n\t\t\t\t\tlabelField: 'text',\n\t\t\t\t\tvalueField: 'value'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata: function data() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t};\n\t},\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tvar self = this;\n\n\t\tif (this.settings.create) {\n\t\t\tvar create = this.settings.create;\n\t\t\tthis.settings.create = function (input, callback) {\n\t\t\t\t_this.log('Create: ' + input);\n\t\t\t\t_this.log('Dataset: ' + _this.$el.dataset);\n\t\t\t\tvar option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, _this);\n\t\t\t\t}\n\t\t\t\t_this.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.slideToggle) {\n\t\t\tvar onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tvar onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\t(0, _jquery2.default)(this.$dropdown).hide().slideDown('fast').fadeIn('fast');\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\t(0, _jquery2.default)(this.$dropdown).show().slideUp('fast').fadeOut('fast');\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tvar onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function (value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t(0, _jquery2.default)(this.$el).selectize(_extends({\n\t\t\tonInitialize: function onInitialize() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: function onChange(value) {\n\t\t\t\t_this.$emit('input', value);\n\t\t\t\tif (_this.settings.onChange) _this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: function onFocus(param) {\n\t\t\t\t_this.focus = true;\n\t\t\t\tif (_this.settings.onFocus) _this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: function onBlur(param) {\n\t\t\t\t_this.focus = false;\n\t\t\t\tif (_this.settings.onBlur) _this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange\n\t\t}, this.settings));\n\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t(0, _jquery2.default)(this.$el).find('input').on('input', function (e) {\n\t\t\t_this.inputText = e.target.value;\n\n\t\t\tif (_this.inputText.length && _this.settings.createOnEnter && e.keyCode === 13 && _this.focus && _this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.settings.create(_this.inputText, function () {\n\t\t\t\t\t_this.addItem(_this.inputText, true);\n\t\t\t\t\t_this.log('Item added: ' + _this.inputText);\n\t\t\t\t});\n\t\t\t\t_this.log('Add item: ' + _this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed: function destroyed() {\n\t\tif (this.$el.selectize) {\n\t\t\tthis.$el.selectize.destroy();\n\t\t}\n\t},\n\n\twatch: {\n\t\tvalue: function value(_value, old) {\n\t\t\tif (!(0, _deepEqual2.default)(_value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\tif (this.settings.onItemRemove && Array.isArray(_value) && Array.isArray(old) && _value.length < old.length) {\n\t\t\t\tvar removedItem = old.filter(function (e) {\n\t\t\t\t\treturn !_value.find(function (a) {\n\t\t\t\t\t\treturn e == a;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.settings.onItemRemove(_value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t},\n\t\tdisabled: function disabled(_disabled) {\n\t\t\tthis.toggleDisabled(_disabled);\n\t\t},\n\t\tfocus: function focus(_focus) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (_focus === false) {\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, function () {\n\t\t\t\t\t\t_this2.addItem(_this2.inputText, true);\n\t\t\t\t\t\t_this2.log('Item added: ' + _this2.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\toptions: function options(_options) {\n\t\t\tthis.setOptions(_options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled: function toggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.$el.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.$el.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions: function makeOptions() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar justLocal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t\tvar old = this.currentOptions;\n\t\t\tvar _new = [];\n\t\t\tvar nodes = this.$slots.default;\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes.filter(function (node) {\n\t\t\t\t\treturn node.tag && node.tag.toLowerCase() === 'option';\n\t\t\t\t}).map(function (node) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t};\n\t\t\t\t}).concat(this.createdOptions);\n\t\t\t}\n\t\t\tif (!(0, _deepEqual2.default)(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new;\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.$el.selectize.clearOptions();\n\t\t\t\t\tvar optionValues = this.currentOptions.map(function (o) {\n\t\t\t\t\t\treturn o.value;\n\t\t\t\t\t});\n\t\t\t\t\tObject.keys(this.$el.selectize.options).map(function (key) {\n\t\t\t\t\t\treturn _this3.$el.selectize.options[key];\n\t\t\t\t\t}).filter(function (option) {\n\t\t\t\t\t\treturn optionValues.every(function (v) {\n\t\t\t\t\t\t\treturn !(0, _deepEqual2.default)(v, option.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).forEach(function (option) {\n\t\t\t\t\t\treturn _this3.$el.selectize.removeOption(option.value);\n\t\t\t\t\t});\n\t\t\t\t\tthis.$el.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.$el.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue: function setValue(value) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding) {\n\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t}\n\t\t\tthis.$el.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tsetOptions: function setOptions(options) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar items = this.value;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.$el.selectize.clearOptions();\n\t\t\toptions.forEach(function (option) {\n\t\t\t\treturn _this4.$el.selectize.addOption(option);\n\t\t\t});\n\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.$el.selectize.refreshOptions(false);\n\t\t\tthis.setValue();\n\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.options;\n\t\t},\n\t\taddOptions: function addOptions(options) {\n\t\t\tvar _this5 = this;\n\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(function (option) {\n\t\t\t\t\treturn _this5.$el.selectize.addOption(option);\n\t\t\t\t});\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\tthis.addOption(options);\n\t\t\treturn this.options;\n\t\t},\n\t\taddOption: function addOption(option) {\n\t\t\tthis.$el.selectize.addOption(option);\n\t\t\tthis.$el.selectize.refreshOptions(false);\n\t\t\treturn this.options;\n\t\t},\n\t\tsetItems: function setItems(items) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.$el.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn items;\n\t\t},\n\t\taddItems: function addItems(items) {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(function (item) {\n\t\t\t\t\treturn _this6.addItem(items);\n\t\t\t\t});\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\t\t\treturn items;\n\t\t},\n\t\taddItem: function addItem(value) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (force) this.addOptionIfNotExists(value);\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.$el.selectize.addItem(value);\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem: function removeItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.$el.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\taddOptionsIfNotExists: function addOptionsIfNotExists(values) {\n\t\t\tvar _this7 = this;\n\n\t\t\tvalues.forEach(function (value) {\n\t\t\t\treturn _this7.addOptionIfNotExists(value);\n\t\t\t});\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists: function addOptionIfNotExists(value) {\n\t\t\tvar found = false;\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\t\tthis.currentOptions.forEach(function (option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (found === true) return value;\n\n\t\t\tvar option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.$el.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption: function addItemAsOption(option) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.$el.selectize.addOptionIfNotExists(option);\n\t\t\tthis.$el.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus: function setFocus() {\n\t\t\tthis.$el.selectize.focus();\n\t\t},\n\t\tsetBlur: function setBlur() {\n\t\t\tthis.$el.selectize.blur();\n\t\t},\n\t\tlog: function log(text) {\n\t\t\tif (this.settings.debug) console.log('Selectize -- ' + text);\n\t\t},\n\t\tdisableTriggerOnChange: function disableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.$el.selectize) this.$el.selectize.onChange = function () {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange: function enableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.$el.selectize) this.$el.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function () {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\tgetValueFromOptions: function getValueFromOptions(value) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\tif (!this.currentOptions.find(function (option) {\n\t\t\t\treturn option[valueField] == value;\n\t\t\t})) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t},\n\tbeforeUpdate: function beforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(6);\nvar isArguments = __webpack_require__(5);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * selectize.js (v0.12.4)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),__webpack_require__(9),__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar $test = $('<test>').css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -99999,\n\t\t\tleft: -99999,\n\t\t\twidth: 'auto',\n\t\t\tpadding: 0,\n\t\t\twhiteSpace: 'pre'\n\t\t}).text(str).appendTo('body');\n\t\n\t\ttransferStyles($parent, $test, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\tvar width = $test.width();\n\t\t$test.remove();\n\t\n\t\treturn width;\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t\t\tif (!self.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tself.options = self.sifter.items = {};\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t\tself.clear();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tif (caret === 0) {\n\t\t\t\tthis.$control.prepend($el);\n\t\t\t} else {\n\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t}\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn html_container + html_element;\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue2-selectize.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7704ff35c5503c4b8324","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}\n// module id = 0\n// module chunks = 0","<template> \n\t<select ref=\"select\"><slot/></select>\n</template> \n\n<script>\n\n/*\n * slideToggle <bool> - If its true the options will slide\n * disableTriggerOnChange <function> - If its called the onChange event will not called anymore\n * enableTriggerOnChange <function> - If its called the onChange event will callend again\n * onItemRemove <function(items, removedItem)> - This function called when an item removed\n * setFocus <function>\n * setBlur <function>\n * setValue <function (value)>\n * setOptions <function (array or object of option)>\n * addOptions <function (array or object of option)>\n * addOption <function (object of option)>\n * setItems <function (object of items, if its true its added when option is not exists)> - Remove all items and add\n * addItems <function (object of items, if its true its added when option is not exists)> - Just add items, not remove\n * addItem <function (item, if its true its added when option is not exists)>\n * addOptionsIfNotExists <function (options)>\n * addOptionIfNotExists <function (option)>\n * addItemAsOption <function (option)> - Add item (param will option not item) Option has value and text field\n * createOnEnter <bool> - Create will run when you press enter and text is not empty\n * createOnBlur <bool> - Create will run when you click outside and text is not empty\n * debug <bool> - Enable debug mode\n * disableItemRemove\n\n * inputText - Text in input\n * element - Element of select\n * options - Options array\n * focus - If focused\n */\n\nimport $ from 'jquery';\nimport equal from 'deep-equal';\n\nif (!$().selectize) {\n\trequire('selectize')\n}\n\nfunction clean(options) {\n\treturn options.map(option => ({\n\t\ttext: option.text,\n\t\tvalue: option.value\n\t}));\n}\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({\n\t\t\t\tlabelField: 'text',\n\t\t\t\tvalueField: 'value'\n\t\t\t})\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t}\n\t},\n\tmounted() {\n\t\tlet self = this;\n\n\t\t//this.$el = this.$refs.select;\n\n\t\t// If create is bool\n\t\tif (this.settings.create) {\n\t\t\tlet create = this.settings.create;\n\t\t\tthis.settings.create = (input, callback) => {\n\t\t\t\tthis.log('Create: ' + input);\n\t\t\t\tthis.log('Dataset: ' + this.$el.dataset);\n\t\t\t\tlet option = null\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tthis.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t}\n\n\t\t}\n\n\t\t// Slide toggle\n\t\tif (this.settings.slideToggle) {\n\t\t\tlet onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tlet onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function($dropdown = null) {\n\t\t\t\t$(this.$dropdown).hide().slideDown('fast').fadeIn('fast');\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t}\n\t\t\tthis.settings.onDropdownClose = function($dropdown = null) {\n\t\t\t\t$(this.$dropdown).show().slideUp('fast').fadeOut('fast');\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t}\n\t\t}\n\n\t\t// If its true, the user cannot remove item\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tlet onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function(value) {\n\t            selectize.setItems(val);\n\t            if (onItemRemove) onItemRemove(value);\n        \t}\n\t\t}\n\n\t\t// Init selectize\n\t\t$(this.$el).selectize({\n\t\t\tonInitialize: function() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: value => {\n\t\t\t\tthis.$emit('input', value);\n\t\t\t\tif (this.settings.onChange) this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: param => {\n\t\t\t\tthis.focus = true;\n\t\t\t\tif (this.settings.onFocus) this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: param => {\n\t\t\t\tthis.focus = false;\n\t\t\t\tif (this.settings.onBlur) this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange,\n\t\t\t...this.settings\n\t\t})\n\n\t\t// At init\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t$(this.$el).find('input').on('input', e => {\n\t\t\tthis.inputText = e.target.value;\n\n\t\t\t// Call create on enter\n\t\t\tif (this.inputText.length && this.settings.createOnEnter && e.keyCode === 13 && this.focus && this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t});\n\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed() {\n\t\tif (this.$el.selectize) {\n\t\t\tthis.$el.selectize.destroy();\n\t\t}\n\t},\n\twatch: {\n\t\tvalue(value, old) {\n\t\t\tif (!equal(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\t// Call onItemRemove\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tlet removedItem = old.filter(e => !value.find(a => e == a));\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t},\n\t\tdisabled(disabled) {\n\t\t\tthis.toggleDisabled(disabled)\n\t\t},\n\t\tfocus(focus) {\n\t\t\tif (focus === false) {\n\n\t\t\t\t// Call create on blur\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Options from props\n\t\toptions(options) {\n\t\t\tthis.setOptions(options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.$el.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.$el.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions(justLocal = false) {\n\t\t\tlet old = this.currentOptions\n\t\t\tlet _new = []\n\t\t\tlet nodes = this.$slots.default\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes.filter(node => node.tag && node.tag.toLowerCase() === 'option').map(node => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t}\n\t\t\t\t}).concat(this.createdOptions)\n\t\t\t}\n\t\t\tif (!equal(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.$el.selectize.clearOptions();\n\t\t\t\t\tlet optionValues = this.currentOptions.map(o => o.value)\n\t\t\t\t\tObject.keys(this.$el.selectize.options)\n\t\t\t\t\t\t//IE11 fix, Object.values is not supported\n\t\t\t\t\t\t.map(key => this.$el.selectize.options[key]).filter(option => optionValues.every(v => !equal(v, option.value))).forEach(option => this.$el.selectize.removeOption(option.value));\n\t\t\t\t\tthis.$el.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.$el.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue(value) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding) {\n\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t}\n\t\t\tthis.$el.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tsetOptions(options) {\n\t\t\t// Save selected items before clear options (like backup)\n\t\t\tlet items = this.value;\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Add options, clearOptions will remove items too\n\t\t\tthis.$el.selectize.clearOptions();\n\t\t\toptions.forEach(option => this.$el.selectize.addOption(option));\n\n\t\t\t// Set items form backup\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.$el.selectize.refreshOptions(false)\n\t\t\tthis.setValue();\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add options if array \n\t\taddOptions(options) {\n\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(option => this.$el.selectize.addOption(option));\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\t\n\t\t\tthis.addOption(options);\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add one option\n\t\taddOption(option) {\n\t\t\tthis.$el.selectize.addOption(option);\n\t\t\tthis.$el.selectize.refreshOptions(false);\n\t\t\treturn this.options;\n\t\t},\n\t\tsetItems(items, force = false) {\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Set items\n\t\t\tthis.$el.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn items;\n\t\t},\n\t\taddItems(items, force = false) {\n\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(item => this.addItem(items));\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\t\t\treturn items;\n\t\t},\n\t\taddItem(value, force = false) {\n\t\t\tif (force) this.addOptionIfNotExists(value);\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.$el.selectize.addItem(value);\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.$el.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\taddOptionsIfNotExists(values) {\n\t\t\tvalues.forEach(value => this.addOptionIfNotExists(value));\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists(value) {\n\t\t\tlet found = false;\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Find by value\n\t\t\tthis.currentOptions.forEach(function(option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If option not exists add\n\t\t\tif (found === true) return value;\n\n\t\t\tlet option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.$el.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption(option) {\n\n\t\t\t// Find option by valueField\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.$el.selectize.addOptionIfNotExists(option);\n\t\t\tthis.$el.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus() {\n\t\t\tthis.$el.selectize.focus();\n\t\t},\n\t\tsetBlur() {\n\t\t\tthis.$el.selectize.blur();\n\t\t},\n\t\tlog(text) {\n\t\t\tif (this.settings.debug) console.log('Selectize -- ' + text);\n\t\t},\n\t\tdisableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.$el.selectize)\n\t\t\tthis.$el.selectize.onChange = function() {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.$el.selectize)\n\t\t\tthis.$el.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function() {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\t// As value you can push a string and option object\n\t\t// If its string check is in options\n\t\t// If its object get the value\n\t\tgetValueFromOptions(value) {\n\t\t\t// Check value is an object\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\n\t\t\t\t// Check value field is exists\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\t// Check option is exists\n\t\t\tif (!this.currentOptions.find(option => option[valueField] == value)) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t},\n\tbeforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n} \n</script>\n\n\n// WEBPACK FOOTER //\n// main.vue?d5bfe158","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4787ef3e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/main.vue\n// module id = 3\n// module chunks = 0","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/index.js\n// module id = 4\n// module chunks = 0","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/is_arguments.js\n// module id = 5\n// module chunks = 0","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/keys.js\n// module id = 6\n// module chunks = 0","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/microplugin/src/microplugin.js\n// module id = 7\n// module chunks = 0","/**\n * selectize.js (v0.12.4)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar $test = $('<test>').css({\n\t\t\tposition: 'absolute',\n\t\t\ttop: -99999,\n\t\t\tleft: -99999,\n\t\t\twidth: 'auto',\n\t\t\tpadding: 0,\n\t\t\twhiteSpace: 'pre'\n\t\t}).text(str).appendTo('body');\n\t\n\t\ttransferStyles($parent, $test, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\tvar width = $test.width();\n\t\t$test.remove();\n\t\n\t\treturn width;\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t\t\tif (!self.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tself.options = self.sifter.items = {};\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t\tself.clear();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control.outerWidth(),\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tif (caret === 0) {\n\t\t\t\tthis.$control.prepend($el);\n\t\t\t} else {\n\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\n\t\t\t}\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn html_container + html_element;\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/selectize/dist/js/selectize.js\n// module id = 8\n// module chunks = 0","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sifter/sifter.js\n// module id = 9\n// module chunks = 0","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./main.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4787ef3e\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./main.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}