{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue2-selectize.js","webpack:///webpack/bootstrap bdefdd1effff623faf35","webpack:///external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}","webpack:///main.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/main.vue?13c5","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/microplugin/src/microplugin.js","webpack:///./~/selectize/dist/js/selectize.js","webpack:///./~/sifter/sifter.js","webpack:///./src/main.vue"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","clean","options","map","option","text","_extends","assign","target","arguments","length","source","key","_jquery","_jquery2","_deepEqual","_deepEqual2","selectize","props","settings","type","labelField","valueField","disabled","Boolean","Array","data","element","currentOptions","createdOptions","focus","inputText","items","mounted","_this","self","$refs","select","log","create","input","callback","push","slideToggle","onDropdownOpen","onDropdownClose","$dropdown","undefined","dropdownElement","find","hide","slideDown","fadeIn","show","slideUp","fadeOut","disableItemRemove","onItemRemove","setItems","val","onInitialize","setValue","onChange","$emit","onFocus","param","onBlur","setOptions","addOptions","addOptionsIfNotExists","addOptionIfNotExists","addItems","addItem","disableTriggerOnChange","enableTriggerOnChange","makeOptions","toggleDisabled","on","e","createOnEnter","keyCode","preventDefault","destroyed","destroy","watch","_value","_x3","_x4","apply","toString","old","isArray","removedItem","filter","a","_disabled","_focus","_this2","createOnBlur","_options","methods","disable","enable","_this3","justLocal","_new","nodes","$slots","node","tag","toLowerCase","children","trim","domProps","attrs","concat","clearOptions","optionValues","keys","every","v","forEach","removeOption","addOption","refreshOptions","forceAdding","_this4","_this5","findOldOption","oldOption","force","clearItems","_this6","item","getValueFromOptions","removeItem","values","_this7","found","addItemAsOption","setFocus","setBlur","blur","text2","text3","debug","console","oldOnChange","triggerOnChange","JSON","stringify","setOptionGroups","optgroups","optgroupId","optgroupValueField","clearOptionGroups","optgroup","addOptionGroup","beforeUpdate","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","computed","_vm","_h","$createElement","_self","_c","ref","_t","isUndefinedOrNull","isBuffer","x","copy","slice","objEquiv","b","opts","isArguments","pSlice","deepEqual","ka","objectKeys","kb","sort","actual","expected","Date","getTime","strict","supported","unsupported","propertyIsEnumerable","supportsArgumentsClass","shim","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","shift","loadPlugin","plugin","Error","fn","vArg","__WEBPACK_AMD_DEFINE_ARRAY__","$","Sifter","highlight","$element","pattern","regex","RegExp","skip","nodeType","pos","search","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","each","removeHighlight","firstChild","nodeName","parent","normalize","end","MicroEvent","event","fct","_events","off","splice","indexOf","trigger","destObject","IS_MAC","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","validity","isset","hash_key","escape_html","str","replace","hook","before","method","original","after","result","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","watchChildEvent","$parent","selector","child","currentTarget","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","Selectize","$testInput","position","top","left","width","padding","whiteSpace","appendTo","autoGrow","$input","currentWidth","update","printable","placeholder","character","metaKey","altKey","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","tmp","innerHTML","dir","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","userOptions","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","message","error","component","explanation","group","groupEnd","$wrapper","$control","$control_input","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","stopImmediatePropagation","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","paste","onPaste","has","revertSettings","$children","detach","tabindex","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","preload","field_label","field_optgroup","optgroupLabelField","templates","html","optgroup_header","escape","option_create","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","$target","hasClass","closeAfterSelect","lastQuery","getOption","loadingClass","results","Math","max","removeClass","getValue","silent","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","query","getSearchOptions","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","calculateScore","score","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","$order","dom","tokens","canCreate","prepend","addPrecedence","removeOptionGroup","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","getElementWithValue","$options","index","eq","$els","getAttribute","buffer","isPending","control","insertBefore","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","label","removeAttr","visibility","display","getBoundingClientRect","$el","el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","removeData","body","templateName","cache","disabledField","clearCache","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_disabled","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","parse","init_select","optionsMap","readData","arr","$optgroup","tag_name","support","sortable","forcePlaceholderSize","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","html_container","html_element","context","render_item","tokenize","letter","words","escape_regex","DIACRITICS","string","iterator","is_array","token_count","prepareSearch","scoreValue","token","scoreObject","field_count","getattr","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","f","g","h","q","r","t","u","w","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Component"],"mappings":"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","file":"vue2-selectize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _deepEqual = __webpack_require__(4);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (!(0, _jquery2.default)().selectize) {\n\t__webpack_require__(8);\n}\n\nfunction clean(options) {\n\treturn options.map(function (option) {\n\t\treturn {\n\t\t\ttext: option.text,\n\t\t\tvalue: option.value\n\t\t};\n\t});\n}\n\nexports.default = {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: function _default() {\n\t\t\t\treturn {\n\t\t\t\t\tlabelField: 'text',\n\t\t\t\t\tvalueField: 'value'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata: function data() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t};\n\t},\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tvar self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\t\tif (this.settings.create) {\n\t\t\tvar create = this.settings.create;\n\t\t\tthis.settings.create = function (input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tvar option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.slideToggle) {\n\t\t\tvar onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tvar onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tif (self.element) {\n\t\t\t\t\tvar dropdownElement = (0, _jquery2.default)(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement.hide().slideDown('fast').fadeIn('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function () {\n\t\t\t\tvar $dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tif (self.element) {\n\t\t\t\t\tvar dropdownElement = (0, _jquery2.default)(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement.show().slideUp('fast').fadeOut('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tvar onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function (value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t(0, _jquery2.default)(this.element).selectize(_extends({\n\t\t\tonInitialize: function onInitialize() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: function onChange(value) {\n\t\t\t\t_this.$emit('input', value);\n\t\t\t\tif (_this.settings.onChange) _this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: function onFocus(param) {\n\t\t\t\t_this.focus = true;\n\t\t\t\tif (_this.settings.onFocus) _this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: function onBlur(param) {\n\t\t\t\t_this.focus = false;\n\t\t\t\tif (_this.settings.onBlur) _this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange\n\t\t}, this.settings));\n\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t(0, _jquery2.default)(this.element).find('input').on('input', function (e) {\n\t\t\t_this.inputText = e.target.value;\n\n\t\t\tif (_this.inputText.length && _this.settings.createOnEnter && e.keyCode === 13 && _this.focus && _this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.settings.create(_this.inputText, function () {\n\t\t\t\t\t_this.addItem(_this.inputText, true);\n\t\t\t\t\t_this.log('Item added: ' + _this.inputText);\n\t\t\t\t});\n\t\t\t\t_this.log('Add item: ' + _this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed: function destroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t},\n\n\twatch: {\n\t\tvalue: function (_value) {\n\t\t\tfunction value(_x3, _x4) {\n\t\t\t\treturn _value.apply(this, arguments);\n\t\t\t}\n\n\t\t\tvalue.toString = function () {\n\t\t\t\treturn _value.toString();\n\t\t\t};\n\n\t\t\treturn value;\n\t\t}(function (value, old) {\n\t\t\tif (!(0, _deepEqual2.default)(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tvar removedItem = old.filter(function (e) {\n\t\t\t\t\treturn !value.find(function (a) {\n\t\t\t\t\t\treturn e == a;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t}),\n\t\tdisabled: function disabled(_disabled) {\n\t\t\tthis.toggleDisabled(_disabled);\n\t\t},\n\t\tfocus: function focus(_focus) {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (_focus === false) {\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, function () {\n\t\t\t\t\t\t_this2.addItem(_this2.inputText, true);\n\t\t\t\t\t\t_this2.log('Item added: ' + _this2.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\toptions: function options(_options) {\n\t\t\tthis.setOptions(_options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled: function toggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.element.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.element.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions: function makeOptions() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar justLocal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\t\tvar old = this.currentOptions;\n\t\t\tvar _new = [];\n\t\t\tvar nodes = this.$slots.default;\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes.filter(function (node) {\n\t\t\t\t\treturn node.tag && node.tag.toLowerCase() === 'option';\n\t\t\t\t}).map(function (node) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t};\n\t\t\t\t}).concat(this.createdOptions);\n\t\t\t}\n\t\t\tif (!(0, _deepEqual2.default)(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new;\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\t\tvar optionValues = this.currentOptions.map(function (o) {\n\t\t\t\t\t\treturn o.value;\n\t\t\t\t\t});\n\t\t\t\t\tObject.keys(this.element.selectize.options).map(function (key) {\n\t\t\t\t\t\treturn _this3.element.selectize.options[key];\n\t\t\t\t\t}).filter(function (option) {\n\t\t\t\t\t\treturn optionValues.every(function (v) {\n\t\t\t\t\t\t\treturn !(0, _deepEqual2.default)(v, option.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).forEach(function (option) {\n\t\t\t\t\t\treturn _this3.element.selectize.removeOption(option.value);\n\t\t\t\t\t});\n\t\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue: function setValue(value) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.element.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tsetOptions: function setOptions(options) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar items = this.value;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.element.selectize.clearOptions();\n\t\t\toptions.forEach(function (option) {\n\t\t\t\treturn _this4.element.selectize.addOption(option);\n\t\t\t});\n\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\tthis.setValue();\n\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.options;\n\t\t},\n\t\taddOptions: function addOptions(options) {\n\t\t\tvar _this5 = this;\n\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(function (option) {\n\t\t\t\t\treturn _this5.element.selectize.addOption(option);\n\t\t\t\t});\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\tthis.addOption(options);\n\t\t\treturn this.options;\n\t\t},\n\t\taddOption: function addOption(option) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\t\t\tvar findOldOption = this.element.selectize.options.find(function (oldOption) {\n\t\t\t\treturn oldOption[valueField] === option[valueField];\n\t\t\t});\n\n\t\t\tif (findOldOption) {\n\t\t\t\tthis.element.selectize.removeOption(findOldOption[valueField]);\n\t\t\t}\n\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\treturn this.options;\n\t\t},\n\t\tsetItems: function setItems(items) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\tthis.element.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn items;\n\t\t},\n\t\taddItems: function addItems(items) {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(function (item) {\n\t\t\t\t\treturn _this6.addItem(items);\n\t\t\t\t});\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\t\t\treturn items;\n\t\t},\n\t\taddItem: function addItem(value) {\n\t\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (force) this.addOptionIfNotExists(value);\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.addItem(value);\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem: function removeItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\taddOptionsIfNotExists: function addOptionsIfNotExists(values) {\n\t\t\tvar _this7 = this;\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalues.forEach(function (value) {\n\t\t\t\t\treturn _this7.addOptionIfNotExists(value);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.addOptionIfNotExists(values);\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists: function addOptionIfNotExists(value) {\n\t\t\tvar found = false;\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\t\tif (!value && !value.trim()) {\n\t\t\t\tthis.log('Value is empty when adding option');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currentOptions.forEach(function (option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tthis.log('Value is already added to options');\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (found === true) return value;\n\n\t\t\tvar option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption: function addItemAsOption(option) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\t\tthis.element.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus: function setFocus() {\n\t\t\tthis.element.selectize.focus();\n\t\t},\n\t\tsetBlur: function setBlur() {\n\t\t\tthis.element.selectize.blur();\n\t\t},\n\t\tlog: function log(text) {\n\t\t\tvar text2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t\t\tvar text3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n\t\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t\t},\n\t\tdisableTriggerOnChange: function disableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = function () {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange: function enableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function () {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\tgetValueFromOptions: function getValueFromOptions(value) {\n\t\t\tvar valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\tif (!this.currentOptions.find(function (option) {\n\t\t\t\treturn option[valueField] == value;\n\t\t\t})) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tsetOptionGroups: function setOptionGroups(optgroups) {\n\t\t\tvar self = this;\n\t\t\tvar optgroupId = self.settings.optgroupValueField || 'id';\n\t\t\tif (Array.isArray(optgroups)) {\n\t\t\t\tself.selectize.clearOptionGroups();\n\t\t\t\toptgroups.forEach(function (optgroup) {\n\t\t\t\t\tself.selectize.addOptionGroup(optgroup[optgroupId], optgroup);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function beforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(6);\nvar isArguments = __webpack_require__(5);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),__webpack_require__(9),__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue2-selectize.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bdefdd1effff623faf35","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}\n// module id = 0\n// module chunks = 0","<template>\n\t<select ref=\"select\"><slot/></select>\n</template>\n\n<script>\n/*\n * slideToggle <bool> - If its true the options will slide\n * disableTriggerOnChange <function> - If its called the onChange event will not called anymore\n * enableTriggerOnChange <function> - If its called the onChange event will callend again\n * onItemRemove <function(items, removedItem)> - This function called when an item removed\n * setFocus <function>\n * setBlur <function>\n * setValue <function (value)>\n * setOptions <function (array or object of option)>\n * addOptions <function (array or object of option)>\n * addOption <function (object of option)>\n * setItems <function (object of items, if its true its added when option is not exists)> - Remove all items and add\n * addItems <function (object of items, if its true its added when option is not exists)> - Just add items, not remove\n * addItem <function (item, if its true its added when option is not exists)>\n * addOptionsIfNotExists <function (options)>\n * addOptionIfNotExists <function (option)>\n * addItemAsOption <function (option)> - Add item (param will option not item) Option has value and text field\n * createOnEnter <bool> - Create will run when you press enter and text is not empty\n * createOnBlur <bool> - Create will run when you click outside and text is not empty\n * createIfNotExists <bool> - If push something in the model and not exists\n * debug <bool> - Enable debug mode\n * disableItemRemove\n\n * inputText - Text in input\n * element - Element of select\n * options - Options array\n * focus - If focused\n */\n\nimport $ from 'jquery';\nimport equal from 'deep-equal';\n\nif (!$().selectize) {\n\trequire('selectize');\n}\n\nfunction clean(options) {\n\treturn options.map(option => ({\n\t\ttext: option.text,\n\t\tvalue: option.value\n\t}));\n}\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({\n\t\t\t\tlabelField: 'text',\n\t\t\t\tvalueField: 'value'\n\t\t\t})\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t};\n\t},\n\tmounted() {\n\t\tlet self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\t\t// If create is bool\n\t\tif (this.settings.create) {\n\t\t\tlet create = this.settings.create;\n\t\t\tthis.settings.create = function(input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tlet option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\t// Slide toggle\n\t\tif (this.settings.slideToggle) {\n\t\t\tlet onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tlet onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function($dropdown = null) {\n\t\t\t\tif (self.element) {\n\t\t\t\t\tlet dropdownElement = $(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement\n\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t.slideDown('fast')\n\t\t\t\t\t\t\t.fadeIn('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownOpen) onDropdownOpen($dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function($dropdown = null) {\n\t\t\t\tif (self.element) {\n\t\t\t\t\tlet dropdownElement = $(self.element).find('.selectize-dropdown');\n\t\t\t\t\tif (dropdownElement) {\n\t\t\t\t\t\tdropdownElement\n\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t.slideUp('fast')\n\t\t\t\t\t\t\t.fadeOut('fast');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (onDropdownClose) onDropdownClose($dropdown);\n\t\t\t};\n\t\t}\n\n\t\t// If its true, the user cannot remove item\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tlet onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function(value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t// Init selectize\n\t\t$(this.element).selectize({\n\t\t\tonInitialize: function() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: value => {\n\t\t\t\tthis.$emit('input', value);\n\t\t\t\tif (this.settings.onChange) this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: param => {\n\t\t\t\tthis.focus = true;\n\t\t\t\tif (this.settings.onFocus) this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: param => {\n\t\t\t\tthis.focus = false;\n\t\t\t\tif (this.settings.onBlur) this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange,\n\t\t\t...this.settings\n\t\t});\n\n\t\t// At init\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t$(this.element)\n\t\t\t.find('input')\n\t\t\t.on('input', e => {\n\t\t\t\tthis.inputText = e.target.value;\n\n\t\t\t\t// Call create on enter\n\t\t\t\tif (this.inputText.length && this.settings.createOnEnter && e.keyCode === 13 && this.focus && this.settings.create) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdestroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t},\n\twatch: {\n\t\tvalue(value, old) {\n\t\t\tif (!equal(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\t// Call onItemRemove\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tlet removedItem = old.filter(e => !value.find(a => e == a));\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t},\n\t\tdisabled(disabled) {\n\t\t\tthis.toggleDisabled(disabled);\n\t\t},\n\t\tfocus(focus) {\n\t\t\tif (focus === false) {\n\t\t\t\t// Call create on blur\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Options from props\n\t\toptions(options) {\n\t\t\tthis.setOptions(options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.element.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.element.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions(justLocal = false) {\n\t\t\tlet old = this.currentOptions;\n\t\t\tlet _new = [];\n\t\t\tlet nodes = this.$slots.default;\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes\n\t\t\t\t\t.filter(node => node.tag && node.tag.toLowerCase() === 'option')\n\t\t\t\t\t.map(node => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.concat(this.createdOptions);\n\t\t\t}\n\t\t\tif (!equal(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new;\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\t\tlet optionValues = this.currentOptions.map(o => o.value);\n\t\t\t\t\tObject.keys(this.element.selectize.options)\n\t\t\t\t\t\t//IE11 fix, Object.values is not supported\n\t\t\t\t\t\t.map(key => this.element.selectize.options[key])\n\t\t\t\t\t\t.filter(option => optionValues.every(v => !equal(v, option.value)))\n\t\t\t\t\t\t.forEach(option => this.element.selectize.removeOption(option.value));\n\t\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue(value) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addOptionIfNotExists(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.element.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tsetOptions(options) {\n\t\t\t// Save selected items before clear options (like backup)\n\t\t\tlet items = this.value;\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Add options, clearOptions will remove items too\n\t\t\tthis.element.selectize.clearOptions();\n\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\n\t\t\t// Set items form backup\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\tthis.setValue();\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add options if array\n\t\taddOptions(options) {\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\tthis.addOption(options);\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add one option\n\t\taddOption(option) {\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\t\t\tlet findOldOption = this.element.selectize.options.find(oldOption => oldOption[valueField] === option[valueField]);\n\n\t\t\t// If option is already added, remove it to overwrite\n\t\t\tif (findOldOption) {\n\t\t\t\tthis.element.selectize.removeOption(findOldOption[valueField]);\n\t\t\t}\n\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\treturn this.options;\n\t\t},\n\t\tsetItems(items, force = false) {\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Set items\n\t\t\tthis.element.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn items;\n\t\t},\n\t\taddItems(items, force = false) {\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(item => this.addItem(items));\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\t\t\treturn items;\n\t\t},\n\t\taddItem(value, force = false) {\n\t\t\tif (force) this.addOptionIfNotExists(value);\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.addItem(value);\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\taddOptionsIfNotExists(values) {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalues.forEach(value => this.addOptionIfNotExists(value));\n\t\t\t} else {\n\t\t\t\treturn this.addOptionIfNotExists(values);\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists(value) {\n\t\t\tlet found = false;\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Check value is not empty\n\t\t\tif (!value && !value.trim()) {\n\t\t\t\tthis.log('Value is empty when adding option');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find by value\n\t\t\tthis.currentOptions.forEach(function(option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tthis.log('Value is already added to options');\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If option not exists add\n\t\t\tif (found === true) return value;\n\n\t\t\tlet option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption(option) {\n\t\t\t// Find option by valueField\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\t\tthis.element.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus() {\n\t\t\tthis.element.selectize.focus();\n\t\t},\n\t\tsetBlur() {\n\t\t\tthis.element.selectize.blur();\n\t\t},\n\t\tlog(text, text2 = '', text3 = '') {\n\t\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t\t},\n\t\tdisableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = function() {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.element.selectize) this.element.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function() {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\t// As value you can push a string and option object\n\t\t// If its string check is in options\n\t\t// If its object get the value\n\t\tgetValueFromOptions(value) {\n\t\t\t// Check value is an object\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t// Check value field is exists\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\t// Check option is exists\n\t\t\tif (!this.currentOptions.find(option => option[valueField] == value)) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\tsetOptionGroups(optgroups) {\n\t\t\tvar self = this;\n\t\t\tvar optgroupId = self.settings.optgroupValueField || 'id';\n\t\t\tif (Array.isArray(optgroups)) {\n\t\t\t\tself.selectize.clearOptionGroups();\n\t\t\t\toptgroups.forEach(function(optgroup) {\n\t\t\t\t\tself.selectize.addOptionGroup(optgroup[optgroupId], optgroup);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// main.vue?7bbd421c","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4787ef3e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/main.vue\n// module id = 3\n// module chunks = 0","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/index.js\n// module id = 4\n// module chunks = 0","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/is_arguments.js\n// module id = 5\n// module chunks = 0","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/keys.js\n// module id = 6\n// module chunks = 0","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/microplugin/src/microplugin.js\n// module id = 7\n// module chunks = 0","/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/selectize/dist/js/selectize.js\n// module id = 8\n// module chunks = 0","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sifter/sifter.js\n// module id = 9\n// module chunks = 0","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./main.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4787ef3e\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./main.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}