{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue2-selectize.js","webpack:///webpack/bootstrap 32693ca6afaa51697145","webpack:///external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}","webpack:///main.vue","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/main.vue?13c5","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/microplugin/src/microplugin.js","webpack:///./~/selectize/dist/js/selectize.js","webpack:///./~/sifter/sifter.js","webpack:///./src/main.vue"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_defineProperty","key","writable","clean","options","map","option","text","_props$watch$data$mou","_extends","assign","target","arguments","length","source","_jquery","_jquery2","_deepEqual","_deepEqual2","selectize","props","settings","type","labelField","valueField","disabled","Boolean","Array","watch","_value","createIfNotExists","console","log","isArray","addOptionsIfNotExists","addOptionIfNotExists","data","element","currentOptions","createdOptions","focus","inputText","items","mounted","_this","self","$refs","select","create","input","callback","push","slideToggle","onDropdownOpen","onDropdownClose","dropdown","undefined","error","disableItemRemove","onItemRemove","setItems","val","onInitialize","setValue","onChange","$emit","onFocus","param","onBlur","setOptions","addOptions","addItems","addItem","disableTriggerOnChange","enableTriggerOnChange","makeOptions","toggleDisabled","find","on","e","createOnEnter","keyCode","preventDefault","destroyed","destroy","_value2","old","removedItem","filter","a","_disabled","_focus","_this2","createOnBlur","_options","disable","enable","_this3","justLocal","_new","nodes","$slots","node","tag","toLowerCase","children","trim","domProps","attrs","concat","clearOptions","optionValues","keys","every","v","forEach","removeOption","addOption","refreshOptions","forceAdding","_this4","_this5","force","clearItems","_this6","item","getValueFromOptions","removeItem","values","_this7","found","addItemAsOption","setFocus","setBlur","blur","text2","text3","debug","oldOnChange","triggerOnChange","JSON","stringify","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","computed","_vm","_h","$createElement","_self","_c","ref","_t","isUndefinedOrNull","isBuffer","x","copy","slice","objEquiv","b","opts","isArguments","pSlice","deepEqual","ka","objectKeys","kb","sort","actual","expected","Date","getTime","strict","supported","toString","unsupported","propertyIsEnumerable","supportsArgumentsClass","shim","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","shift","loadPlugin","plugin","Error","fn","apply","vArg","__WEBPACK_AMD_DEFINE_ARRAY__","$","Sifter","highlight","$element","pattern","regex","RegExp","skip","nodeType","pos","search","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","each","removeHighlight","firstChild","nodeName","parent","normalize","end","MicroEvent","event","fct","_events","off","splice","indexOf","trigger","destObject","IS_MAC","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","validity","isset","hash_key","escape_html","str","replace","hook","before","method","original","after","result","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","event_args","watchChildEvent","$parent","selector","child","currentTarget","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","Selectize","$testInput","position","top","left","width","padding","whiteSpace","appendTo","autoGrow","$input","currentWidth","update","printable","placeholder","character","metaKey","altKey","substring","shiftKey","String","fromCharCode","toUpperCase","attr","triggerHandler","domToString","tmp","innerHTML","dir","computedStyle","getComputedStyle","getPropertyValue","currentStyle","direction","parents","extend","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isBlurring","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","diacritics","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","message","component","explanation","group","groupEnd","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","stopImmediatePropagation","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","paste","onPaste","has","revertSettings","$children","detach","tabindex","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","preload","field_label","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option_create","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","split","createItem","which","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","$target","hasClass","closeAfterSelect","lastQuery","getOption","loadingClass","results","Math","max","removeClass","getValue","silent","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","y","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getScoreFunction","query","getSearchOptions","sortField","field","fields","searchField","conjunction","searchConjunction","nesting","calculateScore","score","id","triggerDropdown","j","k","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","$order","dom","tokens","canCreate","prepend","addPrecedence","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","getElementWithValue","$options","index","eq","$els","getAttribute","buffer","isPending","control","insertBefore","value_next","wasFull","insertAtCaret","remove","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","label","removeAttr","visibility","display","getBoundingClientRect","$el","el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","show","removeData","body","templateName","cache","disabledField","clearCache","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_disabled","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","parse","init_select","optionsMap","readData","arr","$optgroup","tag_name","support","sortable","forcePlaceholderSize","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","html_container","html_element","context","render_item","tokenize","letter","words","escape_regex","DIACRITICS","string","iterator","is_array","token_count","prepareSearch","scoreValue","token","scoreObject","field_count","getattr","sum","getSortFunction","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","asciifold","f","g","h","q","r","t","u","w","z","chunk","foreignletters","lookup","charAt","regexp","foreignletter","Component"],"mappings":"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","file":"vue2-selectize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selectize\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"Selectize\"] = factory(root[\"jQuery\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _props$watch$data$mou;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _deepEqual = __webpack_require__(4);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nif (!(0, _jquery2.default)().selectize) {\n\t__webpack_require__(8);\n}\n\nfunction clean(options) {\n\treturn options.map(function (option) {\n\t\treturn {\n\t\t\ttext: option.text,\n\t\t\tvalue: option.value\n\t\t};\n\t});\n}\n\nexports.default = (_props$watch$data$mou = {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: function _default() {\n\t\t\t\treturn {\n\t\t\t\t\tlabelField: 'text',\n\t\t\t\t\tvalueField: 'value'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\twatch: {\n\t\tvalue: function value(_value) {\n\t\t\tif (this.settings.createIfNotExists) {\n\t\t\t\tconsole.log(_value);\n\t\t\t\tif (Array.isArray(_value)) this.addOptionsIfNotExists(_value);else this.addOptionIfNotExists(_value);\n\t\t\t}\n\t\t}\n\t},\n\tdata: function data() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t};\n\t},\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tvar self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\t\tif (this.settings.create) {\n\t\t\tvar create = this.settings.create;\n\t\t\tthis.settings.create = function (input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tvar option = null;\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.slideToggle) {\n\t\t\tvar onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tvar onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function () {\n\t\t\t\tvar dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tconsole.error(this, dropdown);\n\t\t\t\tif (onDropdownOpen) onDropdownOpen(dropdown);\n\t\t\t};\n\t\t\tthis.settings.onDropdownClose = function () {\n\t\t\t\tvar dropdown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n\t\t\t\tconsole.error(this, dropdown);\n\t\t\t\tif (onDropdownClose) onDropdownClose(dropdown);\n\t\t\t};\n\t\t}\n\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tvar onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function (value) {\n\t\t\t\tselectize.setItems(val);\n\t\t\t\tif (onItemRemove) onItemRemove(value);\n\t\t\t};\n\t\t}\n\n\t\t(0, _jquery2.default)(this.element).selectize(_extends({\n\t\t\tonInitialize: function onInitialize() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: function onChange(value) {\n\t\t\t\t_this.$emit('input', value);\n\t\t\t\tif (_this.settings.onChange) _this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: function onFocus(param) {\n\t\t\t\t_this.focus = true;\n\t\t\t\tif (_this.settings.onFocus) _this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: function onBlur(param) {\n\t\t\t\t_this.focus = false;\n\t\t\t\tif (_this.settings.onBlur) _this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange\n\t\t}, this.settings));\n\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t(0, _jquery2.default)(this.element).find('input').on('input', function (e) {\n\t\t\t_this.inputText = e.target.value;\n\n\t\t\tif (_this.inputText.length && _this.settings.createOnEnter && e.keyCode === 13 && _this.focus && _this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\t_this.settings.create(_this.inputText, function () {\n\t\t\t\t\t_this.addItem(_this.inputText, true);\n\t\t\t\t\t_this.log('Item added: ' + _this.inputText);\n\t\t\t\t});\n\t\t\t\t_this.log('Add item: ' + _this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed: function destroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t}\n}, _defineProperty(_props$watch$data$mou, 'watch', {\n\tvalue: function value(_value2, old) {\n\t\tif (!(0, _deepEqual2.default)(_value2, old)) {\n\t\t\tthis.setValue();\n\t\t}\n\n\t\tif (this.settings.onItemRemove && Array.isArray(_value2) && Array.isArray(old) && _value2.length < old.length) {\n\t\t\tvar removedItem = old.filter(function (e) {\n\t\t\t\treturn !_value2.find(function (a) {\n\t\t\t\t\treturn e == a;\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.settings.onItemRemove(_value2, removedItem);\n\t\t\tthis.log('On item remove');\n\t\t}\n\t},\n\tdisabled: function disabled(_disabled) {\n\t\tthis.toggleDisabled(_disabled);\n\t},\n\tfocus: function focus(_focus) {\n\t\tvar _this2 = this;\n\n\t\tif (_focus === false) {\n\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\tthis.settings.create(this.inputText, function () {\n\t\t\t\t\t_this2.addItem(_this2.inputText, true);\n\t\t\t\t\t_this2.log('Item added: ' + _this2.inputText);\n\t\t\t\t});\n\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t}\n\t\t}\n\t},\n\toptions: function options(_options) {\n\t\tthis.setOptions(_options);\n\t}\n}), _defineProperty(_props$watch$data$mou, 'methods', {\n\ttoggleDisabled: function toggleDisabled(value) {\n\t\tif (value) {\n\t\t\tthis.element.selectize.disable();\n\t\t} else {\n\t\t\tthis.element.selectize.enable();\n\t\t}\n\t},\n\tmakeOptions: function makeOptions() {\n\t\tvar _this3 = this;\n\n\t\tvar justLocal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n\t\tvar old = this.currentOptions;\n\t\tvar _new = [];\n\t\tvar nodes = this.$slots.default;\n\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t_new = nodes.filter(function (node) {\n\t\t\t\treturn node.tag && node.tag.toLowerCase() === 'option';\n\t\t\t}).map(function (node) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t};\n\t\t\t}).concat(this.createdOptions);\n\t\t}\n\t\tif (!(0, _deepEqual2.default)(clean(old), clean(_new))) {\n\t\t\tthis.currentOptions = _new;\n\t\t\tif (!justLocal) {\n\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\tvar optionValues = this.currentOptions.map(function (o) {\n\t\t\t\t\treturn o.value;\n\t\t\t\t});\n\t\t\t\tObject.keys(this.element.selectize.options).map(function (key) {\n\t\t\t\t\treturn _this3.element.selectize.options[key];\n\t\t\t\t}).filter(function (option) {\n\t\t\t\t\treturn optionValues.every(function (v) {\n\t\t\t\t\t\treturn !(0, _deepEqual2.default)(v, option.value);\n\t\t\t\t\t});\n\t\t\t\t}).forEach(function (option) {\n\t\t\t\t\treturn _this3.element.selectize.removeOption(option.value);\n\t\t\t\t});\n\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\tthis.setValue();\n\t\t\t}\n\t\t}\n\t},\n\tsetValue: function setValue(value) {\n\t\tif (!value) value = this.value;\n\t\tif (this.settings.forceAdding) {\n\t\t\tthis.addOptionsIfNotExists(value);\n\t\t}\n\t\tthis.element.selectize.setValue(value, true);\n\t\tthis.log('Value Set: ' + value);\n\t},\n\tsetOptions: function setOptions(options) {\n\t\tvar _this4 = this;\n\n\t\tvar items = this.value;\n\n\t\tthis.disableTriggerOnChange();\n\n\t\tthis.element.selectize.clearOptions();\n\t\toptions.forEach(function (option) {\n\t\t\treturn _this4.element.selectize.addOption(option);\n\t\t});\n\n\t\tthis.addItems(items);\n\n\t\tthis.element.selectize.refreshOptions(false);\n\t\tthis.setValue();\n\n\t\tthis.enableTriggerOnChange();\n\t\treturn this.options;\n\t},\n\taddOptions: function addOptions(options) {\n\t\tvar _this5 = this;\n\n\t\tif (Array.isArray(options)) {\n\t\t\toptions.forEach(function (option) {\n\t\t\t\treturn _this5.element.selectize.addOption(option);\n\t\t\t});\n\t\t\treturn options;\n\t\t}\n\n\t\tthis.addOption(options);\n\t\treturn this.options;\n\t},\n\taddOption: function addOption(option) {\n\t\tthis.element.selectize.addOption(option);\n\t\tthis.element.selectize.refreshOptions(false);\n\t\treturn this.options;\n\t},\n\tsetItems: function setItems(items) {\n\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\tthis.disableTriggerOnChange();\n\n\t\tthis.element.selectize.clearItems();\n\t\tthis.addItems(items, force);\n\n\t\tthis.enableTriggerOnChange();\n\t\treturn items;\n\t},\n\taddItems: function addItems(items) {\n\t\tvar _this6 = this;\n\n\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\n\t\tif (Array.isArray(items)) {\n\t\t\titems.forEach(function (item) {\n\t\t\t\treturn _this6.addItem(items);\n\t\t\t});\n\t\t\treturn items;\n\t\t}\n\n\t\tthis.addItem(items, force);\n\t\treturn items;\n\t},\n\taddItem: function addItem(value) {\n\t\tvar force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\tif (force) this.addOptionIfNotExists(value);\n\t\tvalue = this.getValueFromOptions(value);\n\t\tthis.element.selectize.addItem(value);\n\t\treturn [value];\n\t},\n\tremoveItem: function removeItem(value) {\n\t\tvalue = this.getValueFromOptions(value);\n\t\tthis.element.selectize.removeItem(value);\n\t\tthis.setValue();\n\t\treturn value;\n\t},\n\taddOptionsIfNotExists: function addOptionsIfNotExists(values) {\n\t\tvar _this7 = this;\n\n\t\tvalues.forEach(function (value) {\n\t\t\treturn _this7.addOptionIfNotExists(value);\n\t\t});\n\t\treturn values;\n\t},\n\taddOptionIfNotExists: function addOptionIfNotExists(value) {\n\t\tvar found = false;\n\t\tvar valueField = this.settings.valueField || 'value';\n\t\tvar labelField = this.settings.labelField || 'text';\n\n\t\tthis.currentOptions.forEach(function (option) {\n\t\t\tif (option[valueField] === value) {\n\t\t\t\tfound = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (found === true) return value;\n\n\t\tvar option = {};\n\t\toption[valueField] = value;\n\t\toption[labelField] = value;\n\t\tthis.element.selectize.addOption(option);\n\t\treturn value;\n\t},\n\taddItemAsOption: function addItemAsOption(option) {\n\t\tvar valueField = this.settings.valueField || 'value';\n\n\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\tthis.element.selectize.addItem(option[valueField]);\n\t\tthis.setValue();\n\n\t\treturn option;\n\t},\n\tsetFocus: function setFocus() {\n\t\tthis.element.selectize.focus();\n\t},\n\tsetBlur: function setBlur() {\n\t\tthis.element.selectize.blur();\n\t},\n\tlog: function log(text) {\n\t\tvar text2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t\tvar text3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t},\n\tdisableTriggerOnChange: function disableTriggerOnChange() {\n\t\tthis.log('On Change disabled');\n\t\tif (this.element.selectize) this.element.selectize.onChange = function () {};\n\t\tthis.oldOnChange = this.settings.onChange;\n\t\tthis.triggerOnChange = false;\n\t},\n\tenableTriggerOnChange: function enableTriggerOnChange() {\n\t\tthis.log('On Change enabled');\n\t\tif (this.element.selectize) this.element.selectize.onChange = this.oldOnChange;\n\t\tthis.oldOnChange = function () {};\n\t\tthis.triggerOnChange = true;\n\t},\n\tgetValueFromOptions: function getValueFromOptions(value) {\n\t\tvar valueField = this.settings.valueField || 'value';\n\t\tif (!Array.isArray(value)) {\n\t\t\tif (!value[valueField]) {\n\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t}\n\n\t\t\treturn value[valueField];\n\t\t}\n\n\t\tif (!this.currentOptions.find(function (option) {\n\t\t\treturn option[valueField] == value;\n\t\t})) {\n\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\treturn value;\n\t\t}\n\n\t\treturn value;\n\t}\n}), _defineProperty(_props$watch$data$mou, 'beforeUpdate', function beforeUpdate() {\n\tthis.makeOptions();\n}), _props$watch$data$mou);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(6);\nvar isArguments = __webpack_require__(5);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0),__webpack_require__(9),__webpack_require__(7)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(2)(\n  /* script */\n  __webpack_require__(1),\n  /* template */\n  __webpack_require__(3),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue2-selectize.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 32693ca6afaa51697145","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"jquery\",\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"root\":\"jQuery\"}\n// module id = 0\n// module chunks = 0","<template> \n\t<select ref=\"select\"><slot/></select>\n</template> \n\n<script>\n\n/*\n * slideToggle <bool> - If its true the options will slide\n * disableTriggerOnChange <function> - If its called the onChange event will not called anymore\n * enableTriggerOnChange <function> - If its called the onChange event will callend again\n * onItemRemove <function(items, removedItem)> - This function called when an item removed\n * setFocus <function>\n * setBlur <function>\n * setValue <function (value)>\n * setOptions <function (array or object of option)>\n * addOptions <function (array or object of option)>\n * addOption <function (object of option)>\n * setItems <function (object of items, if its true its added when option is not exists)> - Remove all items and add\n * addItems <function (object of items, if its true its added when option is not exists)> - Just add items, not remove\n * addItem <function (item, if its true its added when option is not exists)>\n * addOptionsIfNotExists <function (options)>\n * addOptionIfNotExists <function (option)>\n * addItemAsOption <function (option)> - Add item (param will option not item) Option has value and text field\n * createOnEnter <bool> - Create will run when you press enter and text is not empty\n * createOnBlur <bool> - Create will run when you click outside and text is not empty\n * createIfNotExists <bool> - If push something in the model and not exists\n * debug <bool> - Enable debug mode\n * disableItemRemove\n\n * inputText - Text in input\n * element - Element of select\n * options - Options array\n * focus - If focused\n */\n\nimport $ from 'jquery';\nimport equal from 'deep-equal';\n\nif (!$().selectize) {\n\trequire('selectize')\n}\n\nfunction clean(options) {\n\treturn options.map(option => ({\n\t\ttext: option.text,\n\t\tvalue: option.value\n\t}));\n}\n\nexport default {\n\tprops: {\n\t\tvalue: {\n\t\t\tdefault: ''\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({\n\t\t\t\tlabelField: 'text',\n\t\t\t\tvalueField: 'value'\n\t\t\t})\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\toptions: {\n\t\t\ttype: Array\n\t\t}\n\t},\n\twatch: {\n\t\tvalue: function(value) {\n\t\t\tif (this.settings.createIfNotExists) {\n\t\t\t\tconsole.log(value);\n\t\t\t\tif (Array.isArray(value)) this.addOptionsIfNotExists(value);\n\t\t\t\telse this.addOptionIfNotExists(value);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\telement: {},\n\t\t\tselectize: {},\n\t\t\tcurrentOptions: [],\n\t\t\tcreatedOptions: [],\n\t\t\tfocus: false,\n\t\t\tinputText: '',\n\t\t\titems: []\n\t\t}\n\t},\n\tmounted() {\n\t\tlet self = this;\n\n\t\tthis.element = this.$refs.select;\n\t\tthis.log('Element initialized', this.element);\n\n\n\t\t// If create is bool\n\t\tif (this.settings.create) {\n\t\t\tlet create = this.settings.create;\n\t\t\tthis.settings.create = function(input, callback) {\n\t\t\t\tself.log('Create: ' + input);\n\t\t\t\tlet option = null\n\t\t\t\tif (create === true) {\n\t\t\t\t\toption = {\n\t\t\t\t\t\ttext: input,\n\t\t\t\t\t\tvalue: input\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toption = create(input, callback, this);\n\t\t\t\t}\n\t\t\t\tself.createdOptions.push(option);\n\t\t\t\treturn option;\n\t\t\t}\n\n\t\t}\n\n\t\t// Slide toggle\n\t\tif (this.settings.slideToggle) {\n\t\t\tlet onDropdownOpen = this.settings.onDropdownOpen;\n\t\t\tlet onDropdownClose = this.settings.onDropdownClose;\n\t\t\tthis.settings.onDropdownOpen = function(dropdown = null) {\n\t\t\t\tconsole.error(this, dropdown);\n\t\t\t\tif (onDropdownOpen) onDropdownOpen(dropdown);\n\t\t\t}\n\t\t\tthis.settings.onDropdownClose = function(dropdown = null) {\n\t\t\t\tconsole.error(this, dropdown);\n\t\t\t\tif (onDropdownClose) onDropdownClose(dropdown);\n\t\t\t}\n\t\t}\n\n\t\t// If its true, the user cannot remove item\n\t\tif (this.settings.disableItemRemove) {\n\t\t\tlet onItemRemove = this.settings.onItemRemove;\n\t\t\tthis.settings.onItemRemove = function(value) {\n\t            selectize.setItems(val);\n\t            if (onItemRemove) onItemRemove(value);\n        \t}\n\t\t}\n\n\t\t// Init selectize\n\t\t$(this.element).selectize({\n\t\t\tonInitialize: function() {\n\t\t\t\tself.selectize = this;\n\t\t\t\tself.setValue();\n\t\t\t},\n\t\t\tonChange: value => {\n\t\t\t\tthis.$emit('input', value);\n\t\t\t\tif (this.settings.onChange) this.settings.onChange(value);\n\t\t\t},\n\t\t\tonFocus: param => {\n\t\t\t\tthis.focus = true;\n\t\t\t\tif (this.settings.onFocus) this.settings.onFocus(param);\n\t\t\t},\n\t\t\tonBlur: param => {\n\t\t\t\tthis.focus = false;\n\t\t\t\tif (this.settings.onBlur) this.settings.onBlur(param);\n\t\t\t},\n\t\t\tsetOptions: this.setOptions,\n\t\t\taddOptions: this.addOptions,\n\t\t\taddOptionsIfNotExists: this.addOptionsIfNotExists,\n\t\t\taddOptionIfNotExists: this.addOptionIfNotExists,\n\t\t\tsetItems: this.setItems,\n\t\t\taddItems: this.addItems,\n\t\t\taddItem: this.addItem,\n\t\t\tdisableTriggerOnChange: this.disableTriggerOnChange,\n\t\t\tenableTriggerOnChange: this.enableTriggerOnChange,\n\t\t\t...this.settings\n\t\t})\n\n\t\t// At init\n\t\tthis.makeOptions(true);\n\t\tthis.toggleDisabled(this.disabled);\n\n\t\t$(this.element).find('input').on('input', e => {\n\t\t\tthis.inputText = e.target.value;\n\n\t\t\t// Call create on enter\n\t\t\tif (this.inputText.length && this.settings.createOnEnter && e.keyCode === 13 && this.focus && this.settings.create) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t});\n\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t}\n\t\t});\n\t},\n\tdestroyed() {\n\t\tif (this.element.selectize) {\n\t\t\tthis.element.selectize.destroy();\n\t\t}\n\t},\n\twatch: {\n\t\tvalue(value, old) {\n\t\t\tif (!equal(value, old)) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\n\t\t\t// Call onItemRemove\n\t\t\tif (this.settings.onItemRemove && Array.isArray(value) && Array.isArray(old) && value.length < old.length) {\n\t\t\t\tlet removedItem = old.filter(e => !value.find(a => e == a));\n\t\t\t\tthis.settings.onItemRemove(value, removedItem);\n\t\t\t\tthis.log('On item remove');\n\t\t\t}\n\t\t},\n\t\tdisabled(disabled) {\n\t\t\tthis.toggleDisabled(disabled)\n\t\t},\n\t\tfocus(focus) {\n\t\t\tif (focus === false) {\n\n\t\t\t\t// Call create on blur\n\t\t\t\tif (this.inputText.length && this.settings.createOnBlur && this.settings.create) {\n\t\t\t\t\tthis.settings.create(this.inputText, () => {\n\t\t\t\t\t\tthis.addItem(this.inputText, true);\n\t\t\t\t\t\tthis.log('Item added: ' + this.inputText);\n\t\t\t\t\t});\n\t\t\t\t\tthis.log('Add item: ' + this.inputText);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Options from props\n\t\toptions(options) {\n\t\t\tthis.setOptions(options);\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleDisabled(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.element.selectize.disable();\n\t\t\t} else {\n\t\t\t\tthis.element.selectize.enable();\n\t\t\t}\n\t\t},\n\t\tmakeOptions(justLocal = false) {\n\t\t\tlet old = this.currentOptions\n\t\t\tlet _new = []\n\t\t\tlet nodes = this.$slots.default\n\t\t\tif (this.settings.options === undefined && nodes) {\n\t\t\t\t_new = nodes.filter(node => node.tag && node.tag.toLowerCase() === 'option').map(node => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: node.children ? node.children[0].text.trim() : null,\n\t\t\t\t\t\tvalue: node.data.domProps ? node.data.domProps.value : node.data.attrs.value\n\t\t\t\t\t}\n\t\t\t\t}).concat(this.createdOptions)\n\t\t\t}\n\t\t\tif (!equal(clean(old), clean(_new))) {\n\t\t\t\tthis.currentOptions = _new\n\t\t\t\tif (!justLocal) {\n\t\t\t\t\tthis.element.selectize.clearOptions();\n\t\t\t\t\tlet optionValues = this.currentOptions.map(o => o.value)\n\t\t\t\t\tObject.keys(this.element.selectize.options)\n\t\t\t\t\t\t//IE11 fix, Object.values is not supported\n\t\t\t\t\t\t.map(key => this.element.selectize.options[key]).filter(option => optionValues.every(v => !equal(v, option.value))).forEach(option => this.element.selectize.removeOption(option.value));\n\t\t\t\t\tthis.element.selectize.addOption(this.currentOptions);\n\t\t\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\t\t\tthis.setValue();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetValue(value) {\n\t\t\tif (!value) value = this.value;\n\t\t\tif (this.settings.forceAdding) {\n\t\t\t\tthis.addOptionsIfNotExists(value);\n\t\t\t}\n\t\t\tthis.element.selectize.setValue(value, true);\n\t\t\tthis.log('Value Set: ' + value);\n\t\t},\n\t\tsetOptions(options) {\n\t\t\t// Save selected items before clear options (like backup)\n\t\t\tlet items = this.value;\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Add options, clearOptions will remove items too\n\t\t\tthis.element.selectize.clearOptions();\n\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\n\t\t\t// Set items form backup\n\t\t\tthis.addItems(items);\n\n\t\t\tthis.element.selectize.refreshOptions(false)\n\t\t\tthis.setValue();\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add options if array \n\t\taddOptions(options) {\n\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\toptions.forEach(option => this.element.selectize.addOption(option));\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\t\n\t\t\tthis.addOption(options);\n\t\t\treturn this.options;\n\t\t},\n\n\t\t// Add one option\n\t\taddOption(option) {\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\tthis.element.selectize.refreshOptions(false);\n\t\t\treturn this.options;\n\t\t},\n\t\tsetItems(items, force = false) {\n\n\t\t\t// Disable onchange event while items readding\n\t\t\tthis.disableTriggerOnChange();\n\n\t\t\t// Set items\n\t\t\tthis.element.selectize.clearItems();\n\t\t\tthis.addItems(items, force);\n\n\t\t\t// Reload onchange event\n\t\t\tthis.enableTriggerOnChange();\n\t\t\treturn items;\n\t\t},\n\t\taddItems(items, force = false) {\n\n\t\t\tif (Array.isArray(items)) {\n\t\t\t\titems.forEach(item => this.addItem(items));\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tthis.addItem(items, force);\n\t\t\treturn items;\n\t\t},\n\t\taddItem(value, force = false) {\n\t\t\tif (force) this.addOptionIfNotExists(value);\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.addItem(value);\n\t\t\treturn [value];\n\t\t},\n\t\tremoveItem(value) {\n\t\t\tvalue = this.getValueFromOptions(value);\n\t\t\tthis.element.selectize.removeItem(value);\n\t\t\tthis.setValue();\n\t\t\treturn value;\n\t\t},\n\t\taddOptionsIfNotExists(values) {\n\t\t\tvalues.forEach(value => this.addOptionIfNotExists(value));\n\t\t\treturn values;\n\t\t},\n\t\taddOptionIfNotExists(value) {\n\t\t\tlet found = false;\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tlet labelField = this.settings.labelField || 'text';\n\n\t\t\t// Find by value\n\t\t\tthis.currentOptions.forEach(function(option) {\n\t\t\t\tif (option[valueField] === value) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If option not exists add\n\t\t\tif (found === true) return value;\n\n\t\t\tlet option = {};\n\t\t\toption[valueField] = value;\n\t\t\toption[labelField] = value;\n\t\t\tthis.element.selectize.addOption(option);\n\t\t\treturn value;\n\t\t},\n\t\taddItemAsOption(option) {\n\n\t\t\t// Find option by valueField\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\n\t\t\tthis.element.selectize.addOptionIfNotExists(option);\n\t\t\tthis.element.selectize.addItem(option[valueField]);\n\t\t\tthis.setValue();\n\n\t\t\treturn option;\n\t\t},\n\t\tsetFocus() {\n\t\t\tthis.element.selectize.focus();\n\t\t},\n\t\tsetBlur() {\n\t\t\tthis.element.selectize.blur();\n\t\t},\n\t\tlog(text, text2 = '', text3 = '') {\n\t\t\tif (this.settings.debug) console.log('Selectize -- ', text, text2, text3);\n\t\t},\n\t\tdisableTriggerOnChange() {\n\t\t\tthis.log('On Change disabled');\n\t\t\tif (this.element.selectize)\n\t\t\tthis.element.selectize.onChange = function() {};\n\t\t\tthis.oldOnChange = this.settings.onChange;\n\t\t\tthis.triggerOnChange = false;\n\t\t},\n\t\tenableTriggerOnChange() {\n\t\t\tthis.log('On Change enabled');\n\t\t\tif (this.element.selectize)\n\t\t\tthis.element.selectize.onChange = this.oldOnChange;\n\t\t\tthis.oldOnChange = function() {};\n\t\t\tthis.triggerOnChange = true;\n\t\t},\n\t\t// As value you can push a string and option object\n\t\t// If its string check is in options\n\t\t// If its object get the value\n\t\tgetValueFromOptions(value) {\n\t\t\t// Check value is an object\n\t\t\tlet valueField = this.settings.valueField || 'value';\n\t\t\tif (!Array.isArray(value)) {\n\n\t\t\t\t// Check value field is exists\n\t\t\t\tif (!value[valueField]) {\n\t\t\t\t\tthis.log('Item is object, but ' + valueField + ' field is not exists in ' + JSON.stringify(value));\n\t\t\t\t}\n\n\t\t\t\treturn value[valueField];\n\t\t\t}\n\n\t\t\t// Check option is exists\n\t\t\tif (!this.currentOptions.find(option => option[valueField] == value)) {\n\t\t\t\tthis.log('Item not exists in options with value ' + value);\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t},\n\tbeforeUpdate() {\n\t\tthis.makeOptions();\n\t}\n} \n</script>\n\n\n// WEBPACK FOOTER //\n// main.vue?57ce5f0e","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('select', {\n    ref: \"select\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4787ef3e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/main.vue\n// module id = 3\n// module chunks = 0","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/index.js\n// module id = 4\n// module chunks = 0","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/is_arguments.js\n// module id = 5\n// module chunks = 0","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deep-equal/lib/keys.js\n// module id = 6\n// module chunks = 0","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.MicroPlugin = factory();\n\t}\n}(this, function() {\n\tvar MicroPlugin = {};\n\n\tMicroPlugin.mixin = function(Interface) {\n\t\tInterface.plugins = {};\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {mixed} plugins\n\t\t */\n\t\tInterface.prototype.initializePlugins = function(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tvar self  = this;\n\t\t\tvar queue = [];\n\n\t\t\tself.plugins = {\n\t\t\t\tnames     : [],\n\t\t\t\tsettings  : {},\n\t\t\t\trequested : {},\n\t\t\t\tloaded    : {}\n\t\t\t};\n\n\t\t\tif (utils.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t};\n\n\t\tInterface.prototype.loadPlugin = function(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t};\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\tInterface.prototype.require = function(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tInterface.define = function(name, fn) {\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t};\n\t};\n\n\tvar utils = {\n\t\tisArray: Array.isArray || function(vArg) {\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\n\t\t}\n\t};\n\n\treturn MicroPlugin;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/microplugin/src/microplugin.js\n// module id = 7\n// module chunks = 0","/**\n * selectize.js (v0.12.6)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery','sifter','microplugin'], factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n\t} else {\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n\t}\n}(this, function($, Sifter, MicroPlugin) {\n\t'use strict';\n\n\tvar highlight = function($element, pattern) {\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\t\n\t\tvar highlight = function(node) {\n\t\t\tvar skip = 0;\n\t\t\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t\t\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\tvar pos = node.data.search(regex);\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\n\t\t\t\t\tvar match = node.data.match(regex);\n\t\t\t\t\tvar spannode = document.createElement('span');\n\t\t\t\t\tspannode.className = 'highlight';\n\t\t\t\t\tvar middlebit = node.splitText(pos);\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\n\t\t\t\t\tspannode.appendChild(middleclone);\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\n\t\t\t\t\tskip = 1;\n\t\t\t\t}\n\t\t\t} \n\t\t\t// Recurse element node, looking for child text nodes to highlight, unless element \n\t\t\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t\t\telse if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' )) {\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\t\ti += highlight(node.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn skip;\n\t\t};\n\t\n\t\treturn $element.each(function() {\n\t\t\thighlight(this);\n\t\t});\n\t};\n\t\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with() and pass js strict mode\n\t */\n\t$.fn.removeHighlight = function() {\n\t\treturn this.find(\"span.highlight\").each(function() {\n\t\t\tthis.parentNode.firstChild.nodeName;\n\t\t\tvar parent = this.parentNode;\n\t\t\tparent.replaceChild(this.firstChild, this);\n\t\t\tparent.normalize();\n\t\t}).end();\n\t};\n\t\n\t\n\tvar MicroEvent = function() {};\n\tMicroEvent.prototype = {\n\t\ton: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\toff: function(event, fct){\n\t\t\tvar n = arguments.length;\n\t\t\tif (n === 0) return delete this._events;\n\t\t\tif (n === 1) return delete this._events[event];\n\t\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif (event in this._events === false) return;\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\n\t *\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {object} the object which will support MicroEvent\n\t */\n\tMicroEvent.mixin = function(destObject){\n\t\tvar props = ['on', 'off', 'trigger'];\n\t\tfor (var i = 0; i < props.length; i++){\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n\t\t}\n\t};\n\t\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\n\t\n\tvar KEY_A         = 65;\n\tvar KEY_COMMA     = 188;\n\tvar KEY_RETURN    = 13;\n\tvar KEY_ESC       = 27;\n\tvar KEY_LEFT      = 37;\n\tvar KEY_UP        = 38;\n\tvar KEY_P         = 80;\n\tvar KEY_RIGHT     = 39;\n\tvar KEY_DOWN      = 40;\n\tvar KEY_N         = 78;\n\tvar KEY_BACKSPACE = 8;\n\tvar KEY_DELETE    = 46;\n\tvar KEY_SHIFT     = 16;\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\n\tvar KEY_TAB       = 9;\n\t\n\tvar TAG_SELECT    = 1;\n\tvar TAG_INPUT     = 2;\n\t\n\t// for now, android support in general is too spotty to support validity\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\n\t\n\t\n\tvar isset = function(object) {\n\t\treturn typeof object !== 'undefined';\n\t};\n\t\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t * @param {string} value\n\t * @returns {string|null}\n\t */\n\tvar hash_key = function(value) {\n\t\tif (typeof value === 'undefined' || value === null) return null;\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\n\t\treturn value + '';\n\t};\n\t\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_html = function(str) {\n\t\treturn (str + '')\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;');\n\t};\n\t\n\t/**\n\t * Escapes \"$\" characters in replacement strings.\n\t *\n\t * @param {string} str\n\t * @returns {string}\n\t */\n\tvar escape_replace = function(str) {\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\n\t};\n\t\n\tvar hook = {};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked before the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.before = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn original.apply(self, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `method` on `self` so that `fn`\n\t * is invoked after the original method.\n\t *\n\t * @param {object} self\n\t * @param {string} method\n\t * @param {function} fn\n\t */\n\thook.after = function(self, method, fn) {\n\t\tvar original = self[method];\n\t\tself[method] = function() {\n\t\t\tvar result = original.apply(self, arguments);\n\t\t\tfn.apply(self, arguments);\n\t\t\treturn result;\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be invoked once.\n\t *\n\t * @param {function} fn\n\t * @returns {function}\n\t */\n\tvar once = function(fn) {\n\t\tvar called = false;\n\t\treturn function() {\n\t\t\tif (called) return;\n\t\t\tcalled = true;\n\t\t\tfn.apply(this, arguments);\n\t\t};\n\t};\n\t\n\t/**\n\t * Wraps `fn` so that it can only be called once\n\t * every `delay` milliseconds (invoked on the falling edge).\n\t *\n\t * @param {function} fn\n\t * @param {int} delay\n\t * @returns {function}\n\t */\n\tvar debounce = function(fn, delay) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar self = this;\n\t\t\tvar args = arguments;\n\t\t\twindow.clearTimeout(timeout);\n\t\t\ttimeout = window.setTimeout(function() {\n\t\t\t\tfn.apply(self, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n\t\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t * @param {object} self\n\t * @param {array} types\n\t * @param {function} fn\n\t */\n\tvar debounce_events = function(self, types, fn) {\n\t\tvar type;\n\t\tvar trigger = self.trigger;\n\t\tvar event_args = {};\n\t\n\t\t// override trigger method\n\t\tself.trigger = function() {\n\t\t\tvar type = arguments[0];\n\t\t\tif (types.indexOf(type) !== -1) {\n\t\t\t\tevent_args[type] = arguments;\n\t\t\t} else {\n\t\t\t\treturn trigger.apply(self, arguments);\n\t\t\t}\n\t\t};\n\t\n\t\t// invoke provided function\n\t\tfn.apply(self, []);\n\t\tself.trigger = trigger;\n\t\n\t\t// trigger queued events\n\t\tfor (type in event_args) {\n\t\t\tif (event_args.hasOwnProperty(type)) {\n\t\t\t\ttrigger.apply(self, event_args[type]);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * A workaround for http://bugs.jquery.com/ticket/6696\n\t *\n\t * @param {object} $parent - Parent element to listen on.\n\t * @param {string} event - Event name.\n\t * @param {string} selector - Descendant selector to filter by.\n\t * @param {function} fn - Event handler.\n\t */\n\tvar watchChildEvent = function($parent, event, selector, fn) {\n\t\t$parent.on(event, selector, function(e) {\n\t\t\tvar child = e.target;\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\n\t\t\t\tchild = child.parentNode;\n\t\t\t}\n\t\t\te.currentTarget = child;\n\t\t\treturn fn.apply(this, [e]);\n\t\t});\n\t};\n\t\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * @param {object} input\n\t * @returns {object}\n\t */\n\tvar getSelection = function(input) {\n\t\tvar result = {};\n\t\tif ('selectionStart' in input) {\n\t\t\tresult.start = input.selectionStart;\n\t\t\tresult.length = input.selectionEnd - result.start;\n\t\t} else if (document.selection) {\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\tresult.start = sel.text.length - selLen;\n\t\t\tresult.length = selLen;\n\t\t}\n\t\treturn result;\n\t};\n\t\n\t/**\n\t * Copies CSS properties from one element to another.\n\t *\n\t * @param {object} $from\n\t * @param {object} $to\n\t * @param {array} properties\n\t */\n\tvar transferStyles = function($from, $to, properties) {\n\t\tvar i, n, styles = {};\n\t\tif (properties) {\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tstyles = $from.css();\n\t\t}\n\t\t$to.css(styles);\n\t};\n\t\n\t/**\n\t * Measures the width of a string within a\n\t * parent element (in pixels).\n\t *\n\t * @param {string} str\n\t * @param {object} $parent\n\t * @returns {int}\n\t */\n\tvar measureString = function(str, $parent) {\n\t\tif (!str) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tif (!Selectize.$testInput) {\n\t\t\tSelectize.$testInput = $('<span />').css({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: -99999,\n\t\t\t\tleft: -99999,\n\t\t\t\twidth: 'auto',\n\t\t\t\tpadding: 0,\n\t\t\t\twhiteSpace: 'pre'\n\t\t\t}).appendTo('body');\n\t\t}\n\t\n\t\tSelectize.$testInput.text(str);\n\t\n\t\ttransferStyles($parent, Selectize.$testInput, [\n\t\t\t'letterSpacing',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t\t'fontWeight',\n\t\t\t'textTransform'\n\t\t]);\n\t\n\t\treturn Selectize.$testInput.width();\n\t};\n\t\n\t/**\n\t * Sets up an input to grow horizontally as the user\n\t * types. If the value is changed manually, you can\n\t * trigger the \"update\" handler to resize:\n\t *\n\t * $input.trigger('update');\n\t *\n\t * @param {object} $input\n\t */\n\tvar autoGrow = function($input) {\n\t\tvar currentWidth = null;\n\t\n\t\tvar update = function(e, options) {\n\t\t\tvar value, keyCode, printable, placeholder, width;\n\t\t\tvar shift, character, selection;\n\t\t\te = e || window.event || {};\n\t\t\toptions = options || {};\n\t\n\t\t\tif (e.metaKey || e.altKey) return;\n\t\t\tif (!options.force && $input.data('grow') === false) return;\n\t\n\t\t\tvalue = $input.val();\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\n\t\t\t\tkeyCode = e.keyCode;\n\t\t\t\tprintable = (\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)   || // a-z\n\t\t\t\t\t(keyCode >= 96 && keyCode <= 111)  || // numpad 0-9, numeric operators\n\t\t\t\t\t(keyCode >= 186 && keyCode <= 222) || // semicolon, equal, comma, dash, etc.\n\t\t\t\t\tkeyCode === 32 // space\n\t\t\t\t);\n\t\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n\t\t\t\t\tselection = getSelection($input[0]);\n\t\t\t\t\tif (selection.length) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tshift = e.shiftKey;\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\n\t\t\t\t\tif (shift) character = character.toUpperCase();\n\t\t\t\t\telse character = character.toLowerCase();\n\t\t\t\t\tvalue += character;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tplaceholder = $input.attr('placeholder');\n\t\t\tif (!value && placeholder) {\n\t\t\t\tvalue = placeholder;\n\t\t\t}\n\t\n\t\t\twidth = measureString(value, $input) + 4;\n\t\t\tif (width !== currentWidth) {\n\t\t\t\tcurrentWidth = width;\n\t\t\t\t$input.width(width);\n\t\t\t\t$input.triggerHandler('resize');\n\t\t\t}\n\t\t};\n\t\n\t\t$input.on('keydown keyup update blur', update);\n\t\tupdate();\n\t};\n\t\n\tvar domToString = function(d) {\n\t\tvar tmp = document.createElement('div');\n\t\n\t\ttmp.appendChild(d.cloneNode(true));\n\t\n\t\treturn tmp.innerHTML;\n\t};\n\t\n\tvar logError = function(message, options){\n\t\tif(!options) options = {};\n\t\tvar component = \"Selectize\";\n\t\n\t\tconsole.error(component + \": \" + message)\n\t\n\t\tif(options.explanation){\n\t\t\t// console.group is undefined in <IE11\n\t\t\tif(console.group) console.group();\n\t\t\tconsole.error(options.explanation);\n\t\t\tif(console.group) console.groupEnd();\n\t\t}\n\t}\n\t\n\t\n\tvar Selectize = function($input, settings) {\n\t\tvar key, i, n, dir, input, self = this;\n\t\tinput = $input[0];\n\t\tinput.selectize = self;\n\t\n\t\t// detect rtl environment\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\t\n\t\t// setup default state\n\t\t$.extend(self, {\n\t\t\torder            : 0,\n\t\t\tsettings         : settings,\n\t\t\t$input           : $input,\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n\t\t\trtl              : /rtl/i.test(dir),\n\t\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\n\t\t\thighlightedValue : null,\n\t\t\tisBlurring       : false,\n\t\t\tisOpen           : false,\n\t\t\tisDisabled       : false,\n\t\t\tisRequired       : $input.is('[required]'),\n\t\t\tisInvalid        : false,\n\t\t\tisLocked         : false,\n\t\t\tisFocused        : false,\n\t\t\tisInputHidden    : false,\n\t\t\tisSetup          : false,\n\t\t\tisShiftDown      : false,\n\t\t\tisCmdDown        : false,\n\t\t\tisCtrlDown       : false,\n\t\t\tignoreFocus      : false,\n\t\t\tignoreBlur       : false,\n\t\t\tignoreHover      : false,\n\t\t\thasOptions       : false,\n\t\t\tcurrentResults   : null,\n\t\t\tlastValue        : '',\n\t\t\tcaretPos         : 0,\n\t\t\tloading          : 0,\n\t\t\tloadedSearches   : {},\n\t\n\t\t\t$activeOption    : null,\n\t\t\t$activeItems     : [],\n\t\n\t\t\toptgroups        : {},\n\t\t\toptions          : {},\n\t\t\tuserOptions      : {},\n\t\t\titems            : [],\n\t\t\trenderCache      : {},\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n\t\t});\n\t\n\t\t// search system\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\t\n\t\t// build options table\n\t\tif (self.settings.options) {\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\n\t\t\t\tself.registerOption(self.settings.options[i]);\n\t\t\t}\n\t\t\tdelete self.settings.options;\n\t\t}\n\t\n\t\t// build optgroup table\n\t\tif (self.settings.optgroups) {\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\n\t\t\t}\n\t\t\tdelete self.settings.optgroups;\n\t\t}\n\t\n\t\t// option-dependent defaults\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\n\t\t}\n\t\n\t\tself.initializePlugins(self.settings.plugins);\n\t\tself.setupCallbacks();\n\t\tself.setupTemplates();\n\t\tself.setup();\n\t};\n\t\n\t// mixins\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\tMicroEvent.mixin(Selectize);\n\t\n\tif(typeof MicroPlugin !== \"undefined\"){\n\t\tMicroPlugin.mixin(Selectize);\n\t}else{\n\t\tlogError(\"Dependency MicroPlugin is missing\",\n\t\t\t{explanation:\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\n\t\t\t\t\"load Selectize.\"}\n\t\t);\n\t}\n\t\n\t\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\t\n\t$.extend(Selectize.prototype, {\n\t\n\t\t/**\n\t\t * Creates all elements and sets up event bindings.\n\t\t */\n\t\tsetup: function() {\n\t\t\tvar self      = this;\n\t\t\tvar settings  = self.settings;\n\t\t\tvar eventNS   = self.eventNS;\n\t\t\tvar $window   = $(window);\n\t\t\tvar $document = $(document);\n\t\t\tvar $input    = self.$input;\n\t\n\t\t\tvar $wrapper;\n\t\t\tvar $control;\n\t\t\tvar $control_input;\n\t\t\tvar $dropdown;\n\t\t\tvar $dropdown_content;\n\t\t\tvar $dropdown_parent;\n\t\t\tvar inputMode;\n\t\t\tvar timeout_blur;\n\t\t\tvar timeout_focus;\n\t\t\tvar classes;\n\t\t\tvar classes_plugins;\n\t\t\tvar inputId;\n\t\n\t\t\tinputMode         = self.settings.mode;\n\t\t\tclasses           = $input.attr('class') || '';\n\t\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\t\n\t\t\tif(inputId = $input.attr('id')) {\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\n\t\t\t}\n\t\n\t\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\t\t$dropdown.addClass(classes);\n\t\t\t}\n\t\n\t\t\t$wrapper.css({\n\t\t\t\twidth: $input[0].style.width\n\t\t\t});\n\t\n\t\t\tif (self.plugins.names.length) {\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\t\t$wrapper.addClass(classes_plugins);\n\t\t\t\t$dropdown.addClass(classes_plugins);\n\t\t\t}\n\t\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n\t\t\t\t$input.attr('multiple', 'multiple');\n\t\t\t}\n\t\n\t\t\tif (self.settings.placeholder) {\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\n\t\t\t}\n\t\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocorrect')) {\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\n\t\t\t}\n\t\n\t\t\tif ($input.attr('autocapitalize')) {\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n\t\t\t}\n\t\t\t$control_input[0].type = $input[0].type;\n\t\n\t\t\tself.$wrapper          = $wrapper;\n\t\t\tself.$control          = $control;\n\t\t\tself.$control_input    = $control_input;\n\t\t\tself.$dropdown         = $dropdown;\n\t\t\tself.$dropdown_content = $dropdown_content;\n\t\n\t\t\t$dropdown.on('mouseenter mousedown click', '[data-disabled]>[data-selectable]', function(e) { e.stopImmediatePropagation(); });\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n\t\t\tautoGrow($control_input);\n\t\n\t\t\t$control.on({\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$control_input.on({\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\n\t\t\t});\n\t\n\t\t\t$document.on('keydown' + eventNS, function(e) {\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n\t\t\t\tself.isShiftDown = e.shiftKey;\n\t\t\t});\n\t\n\t\t\t$document.on('keyup' + eventNS, function(e) {\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\n\t\t\t});\n\t\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// blur on click outside\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n\t\t\t\t\t\tself.blur(e.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$window.on('mousemove' + eventNS, function() {\n\t\t\t\tself.ignoreHover = false;\n\t\t\t});\n\t\n\t\t\t// store original children and tab index so that they can be\n\t\t\t// restored when the destroy() method is called.\n\t\t\tthis.revertSettings = {\n\t\t\t\t$children : $input.children().detach(),\n\t\t\t\ttabindex  : $input.attr('tabindex')\n\t\t\t};\n\t\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\n\t\n\t\t\tif ($.isArray(settings.items)) {\n\t\t\t\tself.setValue(settings.items);\n\t\t\t\tdelete settings.items;\n\t\t\t}\n\t\n\t\t\t// feature detect for the validation API\n\t\t\tif (SUPPORTS_VALIDITY_API) {\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.isInvalid = true;\n\t\t\t\t\tself.refreshState();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tself.updateOriginalInput();\n\t\t\tself.refreshItems();\n\t\t\tself.refreshState();\n\t\t\tself.updatePlaceholder();\n\t\t\tself.isSetup = true;\n\t\n\t\t\tif ($input.is(':disabled')) {\n\t\t\t\tself.disable();\n\t\t\t}\n\t\n\t\t\tself.on('change', this.onChange);\n\t\n\t\t\t$input.data('selectize', self);\n\t\t\t$input.addClass('selectized');\n\t\t\tself.trigger('initialize');\n\t\n\t\t\t// preload options\n\t\t\tif (settings.preload === true) {\n\t\t\t\tself.onSearchChange('');\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t/**\n\t\t * Sets up default rendering functions.\n\t\t */\n\t\tsetupTemplates: function() {\n\t\t\tvar self = this;\n\t\t\tvar field_label = self.settings.labelField;\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\t\n\t\t\tvar templates = {\n\t\t\t\t'optgroup': function(data) {\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\n\t\t\t\t},\n\t\t\t\t'optgroup_header': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'item': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n\t\t\t\t},\n\t\t\t\t'option_create': function(data, escape) {\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\n\t\t},\n\t\n\t\t/**\n\t\t * Maps fired events to callbacks provided\n\t\t * in the settings used when creating the control.\n\t\t */\n\t\tsetupCallbacks: function() {\n\t\t\tvar key, fn, callbacks = {\n\t\t\t\t'initialize'      : 'onInitialize',\n\t\t\t\t'change'          : 'onChange',\n\t\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t\t'clear'           : 'onClear',\n\t\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t\t'type'            : 'onType',\n\t\t\t\t'load'            : 'onLoad',\n\t\t\t\t'focus'           : 'onFocus',\n\t\t\t\t'blur'            : 'onBlur'\n\t\t\t};\n\t\n\t\t\tfor (key in callbacks) {\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\n\t\t\t\t\tfn = this.settings[callbacks[key]];\n\t\t\t\t\tif (fn) this.on(key, fn);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a click event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonClick: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\n\t\t\t// is ignored unless invoked within a click event)\n\t    // also necessary to reopen a dropdown that has been closed by\n\t    // closeAfterSelect\n\t\t\tif (!self.isFocused || !self.isOpen) {\n\t\t\t\tself.focus();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the main control element\n\t\t * has a mouse down event.\n\t\t *\n\t\t * @param {object} e\n\t\t * @return {boolean}\n\t\t */\n\t\tonMouseDown: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\n\t\t\tvar $target = $(e.target);\n\t\n\t\t\tif (self.isFocused) {\n\t\t\t\t// retain focus by preventing native handling. if the\n\t\t\t\t// event target is the input it should not be modified.\n\t\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t\tif (e.target !== self.$control_input[0]) {\n\t\t\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\t\t\t// toggle dropdown\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\n\t\t\t\t\t} else if (!defaultPrevented) {\n\t\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// give control focus\n\t\t\t\tif (!defaultPrevented) {\n\t\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\t\tself.focus();\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the value of the control has been changed.\n\t\t * This should propagate the event to the original DOM\n\t\t * input / select element.\n\t\t */\n\t\tonChange: function() {\n\t\t\tthis.$input.trigger('change');\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> paste.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonPaste: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If a regex or string is included, this will split the pasted\n\t\t\t// input and create Items for each separate value\n\t\t\tif (self.settings.splitOn) {\n\t\n\t\t\t\t// Wait for pasted text to be recognized in value\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar pastedText = self.$control_input.val();\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\n\t\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\n\t\t\t\t\t\tself.createItem(splitInput[i]);\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keypress.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyPress: function(e) {\n\t\t\tif (this.isLocked) return e && e.preventDefault();\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n\t\t\t\tthis.createItem();\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keydown.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyDown: function(e) {\n\t\t\tvar isInput = e.target === this.$control_input[0];\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) {\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_A:\n\t\t\t\t\tif (self.isCmdDown) {\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_N:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_DOWN:\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\t\tself.open();\n\t\t\t\t\t} else if (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_P:\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\n\t\t\t\tcase KEY_UP:\n\t\t\t\t\tif (self.$activeOption) {\n\t\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RETURN:\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_LEFT:\n\t\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_RIGHT:\n\t\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_TAB:\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\n\t\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\n\t\t\t\t\t\tif (!self.isFull()) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\tcase KEY_BACKSPACE:\n\t\t\t\tcase KEY_DELETE:\n\t\t\t\t\tself.deleteSelection(e);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> keyup.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonKeyUp: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return e && e.preventDefault();\n\t\t\tvar value = self.$control_input.val() || '';\n\t\t\tif (self.lastValue !== value) {\n\t\t\t\tself.lastValue = value;\n\t\t\t\tself.onSearchChange(value);\n\t\t\t\tself.refreshOptions();\n\t\t\t\tself.trigger('type', value);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the user-provide option provider / loader.\n\t\t *\n\t\t * Note: this function is debounced in the Selectize\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tonSearchChange: function(value) {\n\t\t\tvar self = this;\n\t\t\tvar fn = self.settings.load;\n\t\t\tif (!fn) return;\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tself.load(function(callback) {\n\t\t\t\tfn.apply(self, [value, callback]);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> focus.\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tonFocus: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar wasFocused = self.isFocused;\n\t\n\t\t\tif (self.isDisabled) {\n\t\t\t\tself.blur();\n\t\t\t\te && e.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif (self.ignoreFocus) return;\n\t\t\tself.isFocused = true;\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\n\t\n\t\t\tif (!wasFocused) self.trigger('focus');\n\t\n\t\t\tif (!self.$activeItems.length) {\n\t\t\t\tself.showInput();\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t\t}\n\t\n\t\t\tself.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered on <input> blur.\n\t\t *\n\t\t * @param {object} e\n\t\t * @param {Element} dest\n\t\t */\n\t\tonBlur: function(e, dest) {\n\t\t\tvar self = this;\n\t\t\tif (!self.isFocused) return;\n\t\t\tself.isFocused = false;\n\t\n\t\t\tif (self.ignoreFocus) {\n\t\t\t\treturn;\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\n\t\t\t\tself.ignoreBlur = true;\n\t\t\t\tself.onFocus(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar deactivate = function() {\n\t\t\t\tself.close();\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.setActiveItem(null);\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\tself.refreshState();\n\t\n\t\t\t\t// IE11 bug: element still marked as active\n\t\t\t\tdest && dest.focus && dest.focus();\n\t\n\t\t\t\tself.isBlurring = false;\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.trigger('blur');\n\t\t\t};\n\t\n\t\t\tself.isBlurring = true;\n\t\t\tself.ignoreFocus = true;\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\t\tself.createItem(null, false, deactivate);\n\t\t\t} else {\n\t\t\t\tdeactivate();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user rolls over\n\t\t * an option in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionHover: function(e) {\n\t\t\tif (this.ignoreHover) return;\n\t\t\tthis.setActiveOption(e.currentTarget, false);\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an option\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonOptionSelect: function(e) {\n\t\t\tvar value, $target, $option, self = this;\n\t\n\t\t\tif (e.preventDefault) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\n\t\t\t$target = $(e.currentTarget);\n\t\t\tif ($target.hasClass('create')) {\n\t\t\t\tself.createItem(null, function() {\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalue = $target.attr('data-value');\n\t\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\t\tself.lastQuery = null;\n\t\t\t\t\tself.setTextboxValue('');\n\t\t\t\t\tself.addItem(value);\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Triggered when the user clicks on an item\n\t\t * that has been selected.\n\t\t *\n\t\t * @param {object} e\n\t\t * @returns {boolean}\n\t\t */\n\t\tonItemSelect: function(e) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked) return;\n\t\t\tif (self.settings.mode === 'multi') {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the provided method that provides\n\t\t * results to a callback---which are then added\n\t\t * as options to the control.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tload: function(fn) {\n\t\t\tvar self = this;\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\t\n\t\t\tself.loading++;\n\t\t\tfn.apply(self, [function(results) {\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\t\tif (results && results.length) {\n\t\t\t\t\tself.addOption(results);\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\t\t\t\t}\n\t\t\t\tif (!self.loading) {\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\n\t\t\t\t}\n\t\t\t\tself.trigger('load', results);\n\t\t\t}]);\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the input field of the control to the specified value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tsetTextboxValue: function(value) {\n\t\t\tvar $input = this.$control_input;\n\t\t\tvar changed = $input.val() !== value;\n\t\t\tif (changed) {\n\t\t\t\t$input.val(value).triggerHandler('update');\n\t\t\t\tthis.lastValue = value;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the value of the control. If multiple items\n\t\t * can be selected (e.g. <select multiple>), this returns\n\t\t * an array. If only one item can be selected, this\n\t\t * returns a string.\n\t\t *\n\t\t * @returns {mixed}\n\t\t */\n\t\tgetValue: function() {\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n\t\t\t\treturn this.items;\n\t\t\t} else {\n\t\t\t\treturn this.items.join(this.settings.delimiter);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Resets the selected items to the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t */\n\t\tsetValue: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tthis.clear(silent);\n\t\t\t\tthis.addItems(value, silent);\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item.\n\t\t *\n\t\t * @param {object} $item\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tsetActiveItem: function($item, e) {\n\t\t\tvar self = this;\n\t\t\tvar eventName;\n\t\t\tvar i, idx, begin, end, item, swap;\n\t\t\tvar $last;\n\t\n\t\t\tif (self.settings.mode === 'single') return;\n\t\t\t$item = $($item);\n\t\n\t\t\t// clear the active selection\n\t\t\tif (!$item.length) {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [];\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.showInput();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// modify selection\n\t\t\teventName = e && e.type.toLowerCase();\n\t\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n\t\t\t\t$last = self.$control.children('.active:last');\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n\t\t\t\tif (begin > end) {\n\t\t\t\t\tswap  = begin;\n\t\t\t\t\tbegin = end;\n\t\t\t\t\tend   = swap;\n\t\t\t\t}\n\t\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\t\titem = self.$control[0].childNodes[i];\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\n\t\t\t\t\t\t$(item).addClass('active');\n\t\t\t\t\t\tself.$activeItems.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t\t$item.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(self.$activeItems).removeClass('active');\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\n\t\t\t}\n\t\n\t\t\t// ensure control has focus\n\t\t\tself.hideInput();\n\t\t\tif (!this.isFocused) {\n\t\t\t\tself.focus();\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Sets the selected item in the dropdown menu\n\t\t * of available options.\n\t\t *\n\t\t * @param {object} $object\n\t\t * @param {boolean} scroll\n\t\t * @param {boolean} animate\n\t\t */\n\t\tsetActiveOption: function($option, scroll, animate) {\n\t\t\tvar height_menu, height_item, y;\n\t\t\tvar scroll_top, scroll_bottom;\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\n\t\t\tself.$activeOption = null;\n\t\n\t\t\t$option = $($option);\n\t\t\tif (!$option.length) return;\n\t\n\t\t\tself.$activeOption = $option.addClass('active');\n\t\n\t\t\tif (scroll || !isset(scroll)) {\n\t\n\t\t\t\theight_menu   = self.$dropdown_content.height();\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n\t\t\t\tscroll_top    = y;\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\n\t\n\t\t\t\tif (y + height_item > height_menu + scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t} else if (y < scroll) {\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Selects all items (CTRL + A).\n\t\t */\n\t\tselectAll: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.settings.mode === 'single') return;\n\t\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\tself.hideInput();\n\t\t\t\tself.close();\n\t\t\t}\n\t\t\tself.focus();\n\t\t},\n\t\n\t\t/**\n\t\t * Hides the input element out of view, while\n\t\t * retaining its focus.\n\t\t */\n\t\thideInput: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.setTextboxValue('');\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n\t\t\tself.isInputHidden = true;\n\t\t},\n\t\n\t\t/**\n\t\t * Restores input visibility.\n\t\t */\n\t\tshowInput: function() {\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\n\t\t\tthis.isInputHidden = false;\n\t\t},\n\t\n\t\t/**\n\t\t * Gives the control focus.\n\t\t */\n\t\tfocus: function() {\n\t\t\tvar self = this;\n\t\t\tif (self.isDisabled) return;\n\t\n\t\t\tself.ignoreFocus = true;\n\t\t\tself.$control_input[0].focus();\n\t\t\twindow.setTimeout(function() {\n\t\t\t\tself.ignoreFocus = false;\n\t\t\t\tself.onFocus();\n\t\t\t}, 0);\n\t\t},\n\t\n\t\t/**\n\t\t * Forces the control out of focus.\n\t\t *\n\t\t * @param {Element} dest\n\t\t */\n\t\tblur: function(dest) {\n\t\t\tthis.$control_input[0].blur();\n\t\t\tthis.onBlur(null, dest);\n\t\t},\n\t\n\t\t/**\n\t\t * Returns a function that scores an object\n\t\t * to show how good of a match it is to the\n\t\t * provided query.\n\t\t *\n\t\t * @param {string} query\n\t\t * @param {object} options\n\t\t * @return {function}\n\t\t */\n\t\tgetScoreFunction: function(query) {\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t\t},\n\t\n\t\t/**\n\t\t * Returns search options for sifter (the system\n\t\t * for scoring and sorting results).\n\t\t *\n\t\t * @see https://github.com/brianreavis/sifter.js\n\t\t * @return {object}\n\t\t */\n\t\tgetSearchOptions: function() {\n\t\t\tvar settings = this.settings;\n\t\t\tvar sort = settings.sortField;\n\t\t\tif (typeof sort === 'string') {\n\t\t\t\tsort = [{field: sort}];\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tfields      : settings.searchField,\n\t\t\t\tconjunction : settings.searchConjunction,\n\t\t\t\tsort        : sort,\n\t\t\t\tnesting     : settings.nesting\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Searches through available options and returns\n\t\t * a sorted array of matches.\n\t\t *\n\t\t * Returns an object containing:\n\t\t *\n\t\t *   - query {string}\n\t\t *   - tokens {array}\n\t\t *   - total {int}\n\t\t *   - items {array}\n\t\t *\n\t\t * @param {string} query\n\t\t * @returns {object}\n\t\t */\n\t\tsearch: function(query) {\n\t\t\tvar i, value, score, result, calculateScore;\n\t\t\tvar self     = this;\n\t\t\tvar settings = self.settings;\n\t\t\tvar options  = this.getSearchOptions();\n\t\n\t\t\t// validate user-provided result scoring function\n\t\t\tif (settings.score) {\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\n\t\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// perform search\n\t\t\tif (query !== self.lastQuery) {\n\t\t\t\tself.lastQuery = query;\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n\t\t\t\tself.currentResults = result;\n\t\t\t} else {\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\n\t\t\t}\n\t\n\t\t\t// filter out selected items\n\t\t\tif (settings.hideSelected) {\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the list of available options shown\n\t\t * in the autocomplete dropdown menu.\n\t\t *\n\t\t * @param {boolean} triggerDropdown\n\t\t */\n\t\trefreshOptions: function(triggerDropdown) {\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n\t\t\tvar $active, $active_before, $create;\n\t\n\t\t\tif (typeof triggerDropdown === 'undefined') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tvar self              = this;\n\t\t\tvar query             = $.trim(self.$control_input.val());\n\t\t\tvar results           = self.search(query);\n\t\t\tvar $dropdown_content = self.$dropdown_content;\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\t\n\t\t\t// build markup\n\t\t\tn = results.items.length;\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t\t}\n\t\n\t\t\t// render and group available options individually\n\t\t\tgroups = {};\n\t\t\tgroups_order = [];\n\t\n\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\toption      = self.options[results.items[i].id];\n\t\t\t\toption_html = self.render('option', option);\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\t\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\t\toptgroup = optgroups[j];\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\toptgroup = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t\t}\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// sort optgroups\n\t\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\t\tgroups_order.sort(function(a, b) {\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\n\t\t\t\t\treturn a_order - b_order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// render optgroup headers & join groups\n\t\t\thtml = document.createDocumentFragment();\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\n\t\t\t\toptgroup = groups_order[i];\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\n\t\t\t\t\t// render the optgroup header and options within it,\n\t\t\t\t\t// then pass it to the wrapper template\n\t\t\t\t\thtml_children = document.createDocumentFragment();\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\n\t\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n\t\t\t\t\t\thtml: domToString(html_children),\n\t\t\t\t\t\tdom:  html_children\n\t\t\t\t\t})));\n\t\t\t\t} else {\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t$dropdown_content.html(html);\n\t\n\t\t\t// highlight matching terms inline\n\t\t\tif (self.settings.highlight) {\n\t\t\t\t$dropdown_content.removeHighlight();\n\t\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\n\t\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add \"selected\" class to selected options\n\t\t\tif (!self.settings.hideSelected) {\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// add create option\n\t\t\thas_create_option = self.canCreate(query);\n\t\t\tif (has_create_option) {\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\n\t\t\t}\n\t\n\t\t\t// activate\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\t\tif (self.hasOptions) {\n\t\t\t\tif (results.items.length > 0) {\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\n\t\t\t\t\tif ($active_before && $active_before.length) {\n\t\t\t\t\t\t$active = $active_before;\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\n\t\t\t\t\t}\n\t\t\t\t\tif (!$active || !$active.length) {\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$active = $create;\n\t\t\t\t}\n\t\t\t\tself.setActiveOption($active);\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\n\t\t\t} else {\n\t\t\t\tself.setActiveOption(null);\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Adds an available option. If it already exists,\n\t\t * nothing will happen. Note: this does not refresh\n\t\t * the options list dropdown (use `refreshOptions`\n\t\t * for that).\n\t\t *\n\t\t * Usage:\n\t\t *\n\t\t *   this.addOption(data)\n\t\t *\n\t\t * @param {object|array} data\n\t\t */\n\t\taddOption: function(data) {\n\t\t\tvar i, n, value, self = this;\n\t\n\t\t\tif ($.isArray(data)) {\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\n\t\t\t\t\tself.addOption(data[i]);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (value = self.registerOption(data)) {\n\t\t\t\tself.userOptions[value] = true;\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.trigger('option_add', value, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option to the pool of options.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOption: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.options[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers an option group to the pool of option groups.\n\t\t *\n\t\t * @param {object} data\n\t\t * @return {boolean|string}\n\t\t */\n\t\tregisterOptionGroup: function(data) {\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\t\t\tif (!key) return false;\n\t\n\t\t\tdata.$order = data.$order || ++this.order;\n\t\t\tthis.optgroups[key] = data;\n\t\t\treturn key;\n\t\t},\n\t\n\t\t/**\n\t\t * Registers a new optgroup for options\n\t\t * to be bucketed into.\n\t\t *\n\t\t * @param {string} id\n\t\t * @param {object} data\n\t\t */\n\t\taddOptionGroup: function(id, data) {\n\t\t\tdata[this.settings.optgroupValueField] = id;\n\t\t\tif (id = this.registerOptionGroup(data)) {\n\t\t\t\tthis.trigger('optgroup_add', id, data);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes an existing option group.\n\t\t *\n\t\t * @param {string} id\n\t\t */\n\t\tremoveOptionGroup: function(id) {\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\t\tdelete this.optgroups[id];\n\t\t\t\tthis.renderCache = {};\n\t\t\t\tthis.trigger('optgroup_remove', id);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all existing option groups.\n\t\t */\n\t\tclearOptionGroups: function() {\n\t\t\tthis.optgroups = {};\n\t\t\tthis.renderCache = {};\n\t\t\tthis.trigger('optgroup_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Updates an option available for selection. If\n\t\t * it is visible in the selected items or options\n\t\t * dropdown, it will be re-rendered automatically.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {object} data\n\t\t */\n\t\tupdateOption: function(value, data) {\n\t\t\tvar self = this;\n\t\t\tvar $item, $item_new;\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\n\t\n\t\t\tvalue     = hash_key(value);\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\n\t\n\t\t\t// sanity checks\n\t\t\tif (value === null) return;\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t\n\t\t\torder_old = self.options[value].$order;\n\t\n\t\t\t// update references\n\t\t\tif (value_new !== value) {\n\t\t\t\tdelete self.options[value];\n\t\t\t\tindex_item = self.items.indexOf(value);\n\t\t\t\tif (index_item !== -1) {\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.$order = data.$order || order_old;\n\t\t\tself.options[value_new] = data;\n\t\n\t\t\t// invalidate render cache\n\t\t\tcache_items = self.renderCache['item'];\n\t\t\tcache_options = self.renderCache['option'];\n\t\n\t\t\tif (cache_items) {\n\t\t\t\tdelete cache_items[value];\n\t\t\t\tdelete cache_items[value_new];\n\t\t\t}\n\t\t\tif (cache_options) {\n\t\t\t\tdelete cache_options[value];\n\t\t\t\tdelete cache_options[value_new];\n\t\t\t}\n\t\n\t\t\t// update the item if it's selected\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\n\t\t\t\t$item = self.getItem(value);\n\t\t\t\t$item_new = $(self.render('item', data));\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\n\t\t\t\t$item.replaceWith($item_new);\n\t\t\t}\n\t\n\t\t\t// invalidate last query because we might have updated the sortField\n\t\t\tself.lastQuery = null;\n\t\n\t\t\t// update dropdown contents\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.refreshOptions(false);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Removes a single option.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\tremoveOption: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tvar cache_items = self.renderCache['item'];\n\t\t\tvar cache_options = self.renderCache['option'];\n\t\t\tif (cache_items) delete cache_items[value];\n\t\t\tif (cache_options) delete cache_options[value];\n\t\n\t\t\tdelete self.userOptions[value];\n\t\t\tdelete self.options[value];\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_remove', value);\n\t\t\tself.removeItem(value, silent);\n\t\t},\n\t\n\t\t/**\n\t\t * Clears all options.\n\t\t */\n\t\tclearOptions: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tself.loadedSearches = {};\n\t\t\tself.userOptions = {};\n\t\t\tself.renderCache = {};\n\t\t\tvar options = self.options;\n\t\t\t$.each(self.options, function(key, value) {\n\t\t\t\tif(self.items.indexOf(key) == -1) {\n\t\t\t\t\tdelete options[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tself.options = self.sifter.items = options;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_clear');\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the option\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetOption: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the next or\n\t\t * previous selectable option.\n\t\t *\n\t\t * @param {object} $option\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\n\t\t * @return {object}\n\t\t */\n\t\tgetAdjacentOption: function($option, direction) {\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t},\n\t\n\t\t/**\n\t\t * Finds the first element with a \"data-value\" attribute\n\t\t * that matches the given value.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} $els\n\t\t * @return {object}\n\t\t */\n\t\tgetElementWithValue: function(value, $els) {\n\t\t\tvalue = hash_key(value);\n\t\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\n\t\t\t\t\t\treturn $($els[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn $();\n\t\t},\n\t\n\t\t/**\n\t\t * Returns the jQuery element of the item\n\t\t * matching the given value.\n\t\t *\n\t\t * @param {string} value\n\t\t * @returns {object}\n\t\t */\n\t\tgetItem: function(value) {\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" multiple items at once. Adds them to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItems: function(values, silent) {\n\t\t\tthis.buffer = document.createDocumentFragment();\n\t\n\t\t\tvar childNodes = this.$control[0].childNodes;\n\t\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\t\tthis.buffer.appendChild(childNodes[i]);\n\t\t\t}\n\t\n\t\t\tvar items = $.isArray(values) ? values : [values];\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\n\t\t\t\tthis.isPending = (i < n - 1);\n\t\t\t\tthis.addItem(items[i], silent);\n\t\t\t}\n\t\n\t\t\tvar control = this.$control[0];\n\t\t\tcontrol.insertBefore(this.buffer, control.firstChild);\n\t\n\t\t\tthis.buffer = null;\n\t\t},\n\t\n\t\t/**\n\t\t * \"Selects\" an item. Adds it to the list\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} silent\n\t\t */\n\t\taddItem: function(value, silent) {\n\t\t\tvar events = silent ? [] : ['change'];\n\t\n\t\t\tdebounce_events(this, events, function() {\n\t\t\t\tvar $item, $option, $options;\n\t\t\t\tvar self = this;\n\t\t\t\tvar inputMode = self.settings.mode;\n\t\t\t\tvar i, active, value_next, wasFull;\n\t\t\t\tvalue = hash_key(value);\n\t\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\n\t\t\t\t\tif (inputMode === 'single') self.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\t\n\t\t\t\t$item = $(self.render('item', self.options[value]));\n\t\t\t\twasFull = self.isFull();\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\n\t\t\t\tself.insertAtCaret($item);\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\t\tself.refreshState();\n\t\t\t\t}\n\t\n\t\t\t\tif (self.isSetup) {\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\n\t\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\t$option = self.getOption(value);\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t\t\tif (value_next) {\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\t\tif (!$options.length || self.isFull()) {\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\t\tself.positionDropdown();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tself.updatePlaceholder();\n\t\t\t\t\tself.trigger('item_add', value, $item);\n\t\n\t\t\t\t\tif (!self.isPending) {\n\t\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the selected item matching\n\t\t * the provided value.\n\t\t *\n\t\t * @param {string} value\n\t\t */\n\t\tremoveItem: function(value, silent) {\n\t\t\tvar self = this;\n\t\t\tvar $item, i, idx;\n\t\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\n\t\t\tvalue = hash_key($item.attr('data-value'));\n\t\t\ti = self.items.indexOf(value);\n\t\n\t\t\tif (i !== -1) {\n\t\t\t\t$item.remove();\n\t\t\t\tif ($item.hasClass('active')) {\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.items.splice(i, 1);\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\t\t\tself.removeOption(value, silent);\n\t\t\t\t}\n\t\n\t\t\t\tif (i < self.caretPos) {\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\n\t\t\t\t}\n\t\n\t\t\t\tself.refreshState();\n\t\t\t\tself.updatePlaceholder();\n\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\tself.positionDropdown();\n\t\t\t\tself.trigger('item_remove', value, $item);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Invokes the `create` method provided in the\n\t\t * selectize options that should provide the data\n\t\t * for the new item, given the user input.\n\t\t *\n\t\t * Once this completes, it will be added\n\t\t * to the item list.\n\t\t *\n\t\t * @param {string} value\n\t\t * @param {boolean} [triggerDropdown]\n\t\t * @param {function} [callback]\n\t\t * @return {boolean}\n\t\t */\n\t\tcreateItem: function(input, triggerDropdown) {\n\t\t\tvar self  = this;\n\t\t\tvar caret = self.caretPos;\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\n\t\n\t\t\tvar callback = arguments[arguments.length - 1];\n\t\t\tif (typeof callback !== 'function') callback = function() {};\n\t\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\n\t\t\t\ttriggerDropdown = true;\n\t\t\t}\n\t\n\t\t\tif (!self.canCreate(input)) {\n\t\t\t\tcallback();\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tself.lock();\n\t\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n\t\t\t\tvar data = {};\n\t\t\t\tdata[self.settings.labelField] = input;\n\t\t\t\tdata[self.settings.valueField] = input;\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\tvar create = once(function(data) {\n\t\t\t\tself.unlock();\n\t\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\t\tif (typeof value !== 'string') return callback();\n\t\n\t\t\t\tself.setTextboxValue('');\n\t\t\t\tself.addOption(data);\n\t\t\t\tself.setCaret(caret);\n\t\t\t\tself.addItem(value);\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\n\t\t\tvar output = setup.apply(this, [input, create]);\n\t\t\tif (typeof output !== 'undefined') {\n\t\t\t\tcreate(output);\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Re-renders the selected item lists.\n\t\t */\n\t\trefreshItems: function() {\n\t\t\tthis.lastQuery = null;\n\t\n\t\t\tif (this.isSetup) {\n\t\t\t\tthis.addItem(this.items);\n\t\t\t}\n\t\n\t\t\tthis.refreshState();\n\t\t\tthis.updateOriginalInput();\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent attributes\n\t\t * and CSS classes.\n\t\t */\n\t\trefreshState: function() {\n\t\t\tthis.refreshValidityState();\n\t\t\tthis.refreshClasses();\n\t\t},\n\t\n\t\t/**\n\t\t * Update the `required` attribute of both input and control input.\n\t\t *\n\t\t * The `required` property needs to be activated on the control input\n\t\t * for the error to be displayed at the right place. `required` also\n\t\t * needs to be temporarily deactivated on the input since the input is\n\t\t * hidden and can't show errors.\n\t\t */\n\t\trefreshValidityState: function() {\n\t\t\tif (!this.isRequired) return false;\n\t\n\t\t\tvar invalid = !this.items.length;\n\t\n\t\t\tthis.isInvalid = invalid;\n\t\t\tthis.$control_input.prop('required', invalid);\n\t\t\tthis.$input.prop('required', !invalid);\n\t\t},\n\t\n\t\t/**\n\t\t * Updates all state-dependent CSS classes.\n\t\t */\n\t\trefreshClasses: function() {\n\t\t\tvar self     = this;\n\t\t\tvar isFull   = self.isFull();\n\t\t\tvar isLocked = self.isLocked;\n\t\n\t\t\tself.$wrapper\n\t\t\t\t.toggleClass('rtl', self.rtl);\n\t\n\t\t\tself.$control\n\t\t\t\t.toggleClass('focus', self.isFocused)\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\n\t\t\t\t.toggleClass('required', self.isRequired)\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\n\t\t\t\t.toggleClass('locked', isLocked)\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\n\t\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not more items can be added\n\t\t * to the control without exceeding the user-defined maximum.\n\t\t *\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFull: function() {\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t\t},\n\t\n\t\t/**\n\t\t * Refreshes the original <select> or <input>\n\t\t * element to reflect the current state.\n\t\t */\n\t\tupdateOriginalInput: function(opts) {\n\t\t\tvar i, n, options, label, self = this;\n\t\t\topts = opts || {};\n\t\n\t\t\tif (self.tagType === TAG_SELECT) {\n\t\t\t\toptions = [];\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n\t\t\t\t}\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\n\t\t\t\t}\n\t\t\t\tself.$input.html(options.join(''));\n\t\t\t} else {\n\t\t\t\tself.$input.val(self.getValue());\n\t\t\t\tself.$input.attr('value',self.$input.val());\n\t\t\t}\n\t\n\t\t\tif (self.isSetup) {\n\t\t\t\tif (!opts.silent) {\n\t\t\t\t\tself.trigger('change', self.$input.val());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Shows/hide the input placeholder depending\n\t\t * on if there items in the list already.\n\t\t */\n\t\tupdatePlaceholder: function() {\n\t\t\tif (!this.settings.placeholder) return;\n\t\t\tvar $input = this.$control_input;\n\t\n\t\t\tif (this.items.length) {\n\t\t\t\t$input.removeAttr('placeholder');\n\t\t\t} else {\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\n\t\t\t}\n\t\t\t$input.triggerHandler('update', {force: true});\n\t\t},\n\t\n\t\t/**\n\t\t * Shows the autocomplete dropdown containing\n\t\t * the available options.\n\t\t */\n\t\topen: function() {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\t\tself.focus();\n\t\t\tself.isOpen = true;\n\t\t\tself.refreshState();\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\n\t\t\tself.positionDropdown();\n\t\t\tself.$dropdown.css({visibility: 'visible'});\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Closes the autocomplete dropdown menu.\n\t\t */\n\t\tclose: function() {\n\t\t\tvar self = this;\n\t\t\tvar trigger = self.isOpen;\n\t\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #1164\n\t\t\t\tif (!self.isBlurring) {\n\t\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.isOpen = false;\n\t\t\tself.$dropdown.hide();\n\t\t\tself.setActiveOption(null);\n\t\t\tself.refreshState();\n\t\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\n\t\t},\n\t\n\t\t/**\n\t\t * Calculates and applies the appropriate\n\t\t * position of the dropdown.\n\t\t */\n\t\tpositionDropdown: function() {\n\t\t\tvar $control = this.$control;\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n\t\t\toffset.top += $control.outerHeight(true);\n\t\n\t\t\tthis.$dropdown.css({\n\t\t\t\twidth : $control[0].getBoundingClientRect().width,\n\t\t\t\ttop   : offset.top,\n\t\t\t\tleft  : offset.left\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Resets / clears all selected items\n\t\t * from the control.\n\t\t *\n\t\t * @param {boolean} silent\n\t\t */\n\t\tclear: function(silent) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (!self.items.length) return;\n\t\t\tself.$control.children(':not(input)').remove();\n\t\t\tself.items = [];\n\t\t\tself.lastQuery = null;\n\t\t\tself.setCaret(0);\n\t\t\tself.setActiveItem(null);\n\t\t\tself.updatePlaceholder();\n\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\tself.refreshState();\n\t\t\tself.showInput();\n\t\t\tself.trigger('clear');\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for inserting an element\n\t\t * at the current caret position.\n\t\t *\n\t\t * @param {object} $el\n\t\t */\n\t\tinsertAtCaret: function($el) {\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\n\t\t\tvar el = $el[0];\n\t\t\tvar target = this.buffer || this.$control[0];\n\t\n\t\t\tif (caret === 0) {\n\t\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t\t} else {\n\t\t\t\ttarget.insertBefore(el, target.childNodes[caret]);\n\t\t\t}\n\t\n\t\t\tthis.setCaret(caret + 1);\n\t\t},\n\t\n\t\t/**\n\t\t * Removes the current selected item(s).\n\t\t *\n\t\t * @param {object} e (optional)\n\t\t * @returns {boolean}\n\t\t */\n\t\tdeleteSelection: function(e) {\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n\t\t\t}\n\t\n\t\t\t// determine items that will be removed\n\t\t\tvalues = [];\n\t\n\t\t\tif (self.$activeItems.length) {\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\n\t\t\t\tif (direction > 0) { caret++; }\n\t\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\n\t\t\t\t}\n\t\t\t\tif (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// allow the callback to abort\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// perform removal\n\t\t\tif (typeof caret !== 'undefined') {\n\t\t\t\tself.setCaret(caret);\n\t\t\t}\n\t\t\twhile (values.length) {\n\t\t\t\tself.removeItem(values.pop());\n\t\t\t}\n\t\n\t\t\tself.showInput();\n\t\t\tself.positionDropdown();\n\t\t\tself.refreshOptions(true);\n\t\n\t\t\t// select previous option\n\t\t\tif (option_select) {\n\t\t\t\t$option_select = self.getOption(option_select);\n\t\t\t\tif ($option_select.length) {\n\t\t\t\t\tself.setActiveOption($option_select);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\t/**\n\t\t * Selects the previous / next item (depending\n\t\t * on the `direction` argument).\n\t\t *\n\t\t * > 0 - right\n\t\t * < 0 - left\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceSelection: function(direction, e) {\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\n\t\t\tvar self = this;\n\t\n\t\t\tif (direction === 0) return;\n\t\t\tif (self.rtl) direction *= -1;\n\t\n\t\t\ttail = direction > 0 ? 'last' : 'first';\n\t\t\tselection = getSelection(self.$control_input[0]);\n\t\n\t\t\tif (self.isFocused && !self.isInputHidden) {\n\t\t\t\tvalueLength = self.$control_input.val().length;\n\t\t\t\tcursorAtEdge = direction < 0\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\n\t\t\t\t\t: selection.start === valueLength;\n\t\n\t\t\t\tif (cursorAtEdge && !valueLength) {\n\t\t\t\t\tself.advanceCaret(direction, e);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\n\t\t\t\tif ($tail.length) {\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\n\t\t\t\t\tself.setActiveItem(null);\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret left / right.\n\t\t *\n\t\t * @param {int} direction\n\t\t * @param {object} e (optional)\n\t\t */\n\t\tadvanceCaret: function(direction, e) {\n\t\t\tvar self = this, fn, $adj;\n\t\n\t\t\tif (direction === 0) return;\n\t\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\n\t\t\tif (self.isShiftDown) {\n\t\t\t\t$adj = self.$control_input[fn]();\n\t\t\t\tif ($adj.length) {\n\t\t\t\t\tself.hideInput();\n\t\t\t\t\tself.setActiveItem($adj);\n\t\t\t\t\te && e.preventDefault();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tself.setCaret(self.caretPos + direction);\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Moves the caret to the specified index.\n\t\t *\n\t\t * @param {int} i\n\t\t */\n\t\tsetCaret: function(i) {\n\t\t\tvar self = this;\n\t\n\t\t\tif (self.settings.mode === 'single') {\n\t\t\t\ti = self.items.length;\n\t\t\t} else {\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\n\t\t\t}\n\t\n\t\t\tif(!self.isPending) {\n\t\t\t\t// the input must be moved by leaving it in place and moving the\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\n\t\t\t\t// on mobile webkit devices\n\t\t\t\tvar j, n, fn, $children, $child;\n\t\t\t\t$children = self.$control.children(':not(input)');\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\n\t\t\t\t\t$child = $($children[j]).detach();\n\t\t\t\t\tif (j <  i) {\n\t\t\t\t\t\tself.$control_input.before($child);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$control.append($child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tself.caretPos = i;\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control. Used while\n\t\t * items are being asynchronously created.\n\t\t */\n\t\tlock: function() {\n\t\t\tthis.close();\n\t\t\tthis.isLocked = true;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Re-enables user input on the control.\n\t\t */\n\t\tunlock: function() {\n\t\t\tthis.isLocked = false;\n\t\t\tthis.refreshState();\n\t\t},\n\t\n\t\t/**\n\t\t * Disables user input on the control completely.\n\t\t * While disabled, it cannot receive focus.\n\t\t */\n\t\tdisable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', true);\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\n\t\t\tself.isDisabled = true;\n\t\t\tself.lock();\n\t\t},\n\t\n\t\t/**\n\t\t * Enables the control so that it can respond\n\t\t * to focus and user input.\n\t\t */\n\t\tenable: function() {\n\t\t\tvar self = this;\n\t\t\tself.$input.prop('disabled', false);\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n\t\t\tself.isDisabled = false;\n\t\t\tself.unlock();\n\t\t},\n\t\n\t\t/**\n\t\t * Completely destroys the control and\n\t\t * unbinds all event listeners so that it can\n\t\t * be garbage collected.\n\t\t */\n\t\tdestroy: function() {\n\t\t\tvar self = this;\n\t\t\tvar eventNS = self.eventNS;\n\t\t\tvar revertSettings = self.revertSettings;\n\t\n\t\t\tself.trigger('destroy');\n\t\t\tself.off();\n\t\t\tself.$wrapper.remove();\n\t\t\tself.$dropdown.remove();\n\t\n\t\t\tself.$input\n\t\t\t\t.html('')\n\t\t\t\t.append(revertSettings.$children)\n\t\t\t\t.removeAttr('tabindex')\n\t\t\t\t.removeClass('selectized')\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\n\t\t\t\t.show();\n\t\n\t\t\tself.$control_input.removeData('grow');\n\t\t\tself.$input.removeData('selectize');\n\t\n\t\t\tif (--Selectize.count == 0 && Selectize.$testInput) {\n\t\t\t\tSelectize.$testInput.remove();\n\t\t\t\tSelectize.$testInput = undefined;\n\t\t\t}\n\t\n\t\t\t$(window).off(eventNS);\n\t\t\t$(document).off(eventNS);\n\t\t\t$(document.body).off(eventNS);\n\t\n\t\t\tdelete self.$input[0].selectize;\n\t\t},\n\t\n\t\t/**\n\t\t * A helper method for rendering \"item\" and\n\t\t * \"option\" templates, given the data.\n\t\t *\n\t\t * @param {string} templateName\n\t\t * @param {object} data\n\t\t * @returns {string}\n\t\t */\n\t\trender: function(templateName, data) {\n\t\t\tvar value, id, label;\n\t\t\tvar html = '';\n\t\t\tvar cache = false;\n\t\t\tvar self = this;\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\t\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\n\t\t\t\tcache = !!value;\n\t\t\t}\n\t\n\t\t\t// pull markup from cache if it exists\n\t\t\tif (cache) {\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\n\t\t\t\t\tself.renderCache[templateName] = {};\n\t\t\t\t}\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\n\t\t\t\t\treturn self.renderCache[templateName][value];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// render markup\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\n\t\n\t\t\t// add mandatory attributes\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\n\t\t\t\tif (!data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-selectable', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (templateName === 'optgroup') {\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\n\t\t\t\thtml.attr('data-group', id);\n\t\t\t\tif(data[self.settings.disabledField]) {\n\t\t\t\t\thtml.attr('data-disabled', '');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\t\thtml.attr('data-value', value || '');\n\t\t\t}\n\t\n\t\t\t// update cache\n\t\t\tif (cache) {\n\t\t\t\tself.renderCache[templateName][value] = html[0];\n\t\t\t}\n\t\n\t\t\treturn html[0];\n\t\t},\n\t\n\t\t/**\n\t\t * Clears the render cache for a template. If\n\t\t * no template is given, clears all render\n\t\t * caches.\n\t\t *\n\t\t * @param {string} templateName\n\t\t */\n\t\tclearCache: function(templateName) {\n\t\t\tvar self = this;\n\t\t\tif (typeof templateName === 'undefined') {\n\t\t\t\tself.renderCache = {};\n\t\t\t} else {\n\t\t\t\tdelete self.renderCache[templateName];\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Determines whether or not to display the\n\t\t * create item prompt, given a user input.\n\t\t *\n\t\t * @param {string} input\n\t\t * @return {boolean}\n\t\t */\n\t\tcanCreate: function(input) {\n\t\t\tvar self = this;\n\t\t\tif (!self.settings.create) return false;\n\t\t\tvar filter = self.settings.createFilter;\n\t\t\treturn input.length\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\n\t\t}\n\t\n\t});\n\t\n\t\n\tSelectize.count = 0;\n\tSelectize.defaults = {\n\t\toptions: [],\n\t\toptgroups: [],\n\t\n\t\tplugins: [],\n\t\tdelimiter: ',',\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\t\tpersist: true,\n\t\tdiacritics: true,\n\t\tcreate: false,\n\t\tcreateOnBlur: false,\n\t\tcreateFilter: null,\n\t\thighlight: true,\n\t\topenOnFocus: true,\n\t\tmaxOptions: 1000,\n\t\tmaxItems: null,\n\t\thideSelected: null,\n\t\taddPrecedence: false,\n\t\tselectOnTab: false,\n\t\tpreload: false,\n\t\tallowEmptyOption: false,\n\t\tcloseAfterSelect: false,\n\t\n\t\tscrollDuration: 60,\n\t\tloadThrottle: 300,\n\t\tloadingClass: 'loading',\n\t\n\t\tdataAttr: 'data-data',\n\t\toptgroupField: 'optgroup',\n\t\tvalueField: 'value',\n\t\tlabelField: 'text',\n\t\tdisabledField: 'disabled',\n\t\toptgroupLabelField: 'label',\n\t\toptgroupValueField: 'value',\n\t\tlockOptgroupOrder: false,\n\t\n\t\tsortField: '$order',\n\t\tsearchField: ['text'],\n\t\tsearchConjunction: 'and',\n\t\n\t\tmode: null,\n\t\twrapperClass: 'selectize-control',\n\t\tinputClass: 'selectize-input',\n\t\tdropdownClass: 'selectize-dropdown',\n\t\tdropdownContentClass: 'selectize-dropdown-content',\n\t\n\t\tdropdownParent: null,\n\t\n\t\tcopyClassesToDropdown: true,\n\t\n\t\t/*\n\t\tload                 : null, // function(query, callback) { ... }\n\t\tscore                : null, // function(search) { ... }\n\t\tonInitialize         : null, // function() { ... }\n\t\tonChange             : null, // function(value) { ... }\n\t\tonItemAdd            : null, // function(value, $item) { ... }\n\t\tonItemRemove         : null, // function(value) { ... }\n\t\tonClear              : null, // function() { ... }\n\t\tonOptionAdd          : null, // function(value, data) { ... }\n\t\tonOptionRemove       : null, // function(value) { ... }\n\t\tonOptionClear        : null, // function() { ... }\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\n\t\tonOptionGroupClear   : null, // function() { ... }\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\n\t\tonType               : null, // function(str) { ... }\n\t\tonDelete             : null, // function(values) { ... }\n\t\t*/\n\t\n\t\trender: {\n\t\t\t/*\n\t\t\titem: null,\n\t\t\toptgroup: null,\n\t\t\toptgroup_header: null,\n\t\t\toption: null,\n\t\t\toption_create: null\n\t\t\t*/\n\t\t}\n\t};\n\t\n\t\n\t$.fn.selectize = function(settings_user) {\n\t\tvar defaults             = $.fn.selectize.defaults;\n\t\tvar settings             = $.extend({}, defaults, settings_user);\n\t\tvar attr_data            = settings.dataAttr;\n\t\tvar field_label          = settings.labelField;\n\t\tvar field_value          = settings.valueField;\n\t\tvar field_disabled       = settings.disabledField;\n\t\tvar field_optgroup       = settings.optgroupField;\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\n\t\tvar field_optgroup_value = settings.optgroupValueField;\n\t\n\t\t/**\n\t\t * Initializes selectize from a <input type=\"text\"> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_textbox = function($input, settings_element) {\n\t\t\tvar i, n, values, option;\n\t\n\t\t\tvar data_raw = $input.attr(attr_data);\n\t\n\t\t\tif (!data_raw) {\n\t\t\t\tvar value = $.trim($input.val() || '');\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\t\tvalues = value.split(settings.delimiter);\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\n\t\t\t\t\toption = {};\n\t\t\t\t\toption[field_label] = values[i];\n\t\t\t\t\toption[field_value] = values[i];\n\t\t\t\t\tsettings_element.options.push(option);\n\t\t\t\t}\n\t\t\t\tsettings_element.items = values;\n\t\t\t} else {\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Initializes selectize from a <select> element.\n\t\t *\n\t\t * @param {object} $input\n\t\t * @param {object} settings_element\n\t\t */\n\t\tvar init_select = function($input, settings_element) {\n\t\t\tvar i, n, tagName, $children, order = 0;\n\t\t\tvar options = settings_element.options;\n\t\t\tvar optionsMap = {};\n\t\n\t\t\tvar readData = function($el) {\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\n\t\t\t\tif (typeof data === 'string' && data.length) {\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t};\n\t\n\t\t\tvar addOption = function($option, group) {\n\t\t\t\t$option = $($option);\n\t\n\t\t\t\tvar value = hash_key($option.val());\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\n\t\n\t\t\t\t// if the option already exists, it's probably been\n\t\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t\t// existing option so that it's rendered in both places.\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\t\tif (group) {\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar option             = readData($option) || {};\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\n\t\t\t\toption[field_value]    = option[field_value] || value;\n\t\t\t\toption[field_disabled] = option[field_disabled] || $option.prop('disabled');\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\n\t\n\t\t\t\toptionsMap[value] = option;\n\t\t\t\toptions.push(option);\n\t\n\t\t\t\tif ($option.is(':selected')) {\n\t\t\t\t\tsettings_element.items.push(value);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tvar addGroup = function($optgroup) {\n\t\t\t\tvar i, n, id, optgroup, $options;\n\t\n\t\t\t\t$optgroup = $($optgroup);\n\t\t\t\tid = $optgroup.attr('label');\n\t\n\t\t\t\tif (id) {\n\t\t\t\t\toptgroup = readData($optgroup) || {};\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\n\t\t\t\t\toptgroup[field_disabled] = $optgroup.prop('disabled');\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\n\t\t\t\t}\n\t\n\t\t\t\t$options = $('option', $optgroup);\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\n\t\t\t\t\taddOption($options[i], id);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\n\t\n\t\t\t$children = $input.children();\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\n\t\t\t\tif (tagName === 'optgroup') {\n\t\t\t\t\taddGroup($children[i]);\n\t\t\t\t} else if (tagName === 'option') {\n\t\t\t\t\taddOption($children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn this.each(function() {\n\t\t\tif (this.selectize) return;\n\t\n\t\t\tvar instance;\n\t\t\tvar $input = $(this);\n\t\t\tvar tag_name = this.tagName.toLowerCase();\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\n\t\t\t}\n\t\n\t\t\tvar settings_element = {\n\t\t\t\t'placeholder' : placeholder,\n\t\t\t\t'options'     : [],\n\t\t\t\t'optgroups'   : [],\n\t\t\t\t'items'       : []\n\t\t\t};\n\t\n\t\t\tif (tag_name === 'select') {\n\t\t\t\tinit_select($input, settings_element);\n\t\t\t} else {\n\t\t\t\tinit_textbox($input, settings_element);\n\t\t\t}\n\t\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n\t\t});\n\t};\n\t\n\t$.fn.selectize.defaults = Selectize.defaults;\n\t$.fn.selectize.support = {\n\t\tvalidity: SUPPORTS_VALIDITY_API\n\t};\n\t\n\t\n\tSelectize.define('drag_drop', function(options) {\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t\tif (this.settings.mode !== 'multi') return;\n\t\tvar self = this;\n\t\n\t\tself.lock = (function() {\n\t\t\tvar original = self.lock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.disable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.unlock = (function() {\n\t\t\tvar original = self.unlock;\n\t\t\treturn function() {\n\t\t\t\tvar sortable = self.$control.data('sortable');\n\t\t\t\tif (sortable) sortable.enable();\n\t\t\t\treturn original.apply(self, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(this, arguments);\n\t\n\t\t\t\tvar $control = self.$control.sortable({\n\t\t\t\t\titems: '[data-value]',\n\t\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\t\tdisabled: self.isLocked,\n\t\t\t\t\tstart: function(e, ui) {\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t\t\t},\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\n\t\t\t\t\t\tvar values = [];\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setValue(values);\n\t\t\t\t\t\tself.setActiveItem(active);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('dropdown_header', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\ttitle         : 'Untitled',\n\t\t\theaderClass   : 'selectize-dropdown-header',\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\n\t\n\t\t\thtml: function(data) {\n\t\t\t\treturn (\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t}\n\t\t}, options);\n\t\n\t\tself.setup = (function() {\n\t\t\tvar original = self.setup;\n\t\t\treturn function() {\n\t\t\t\toriginal.apply(self, arguments);\n\t\t\t\tself.$dropdown_header = $(options.html(options));\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\n\t\t\t};\n\t\t})();\n\t\n\t});\n\t\n\tSelectize.define('optgroup_columns', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions = $.extend({\n\t\t\tequalizeWidth  : true,\n\t\t\tequalizeHeight : true\n\t\t}, options);\n\t\n\t\tthis.getAdjacentOption = function($option, direction) {\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\n\t\t\tvar index    = $options.index($option) + direction;\n\t\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, $option, $options, $optgroup;\n\t\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n\t\t\t\t\tself.ignoreHover = true;\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\t\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\n\t\t\t\t\tif ($option.length) {\n\t\t\t\t\t\tthis.setActiveOption($option);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t\n\t\tvar getScrollbarWidth = function() {\n\t\t\tvar div;\n\t\t\tvar width = getScrollbarWidth.width;\n\t\t\tvar doc = document;\n\t\n\t\t\tif (typeof width === 'undefined') {\n\t\t\t\tdiv = doc.createElement('div');\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n\t\t\t\tdoc.body.removeChild(div);\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\t\n\t\tvar equalizeSizes = function() {\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\n\t\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\n\t\t\tn = $optgroups.length;\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\n\t\n\t\t\tif (options.equalizeHeight) {\n\t\t\t\theight_max = 0;\n\t\t\t\tfor (i = 0; i < n; i++) {\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\n\t\t\t\t}\n\t\t\t\t$optgroups.css({height: height_max});\n\t\t\t}\n\t\n\t\t\tif (options.equalizeWidth) {\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n\t\t\t\twidth = Math.round(width_parent / n);\n\t\t\t\t$optgroups.css({width: width});\n\t\t\t\tif (n > 1) {\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\n\t\t}\n\t\n\t\n\t});\n\t\n\tSelectize.define('remove_button', function(options) {\n\t\toptions = $.extend({\n\t\t\t\tlabel     : '&times;',\n\t\t\t\ttitle     : 'Remove',\n\t\t\t\tclassName : 'remove',\n\t\t\t\tappend    : true\n\t\t\t}, options);\n\t\n\t\t\tvar singleClose = function(thisRef, options) {\n\t\n\t\t\t\toptions.className = 'remove-single';\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\treturn $('<span>').append(html_container)\n\t\t\t\t\t\t.append(html_element);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\n\t\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tself.clear();\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tvar multiClose = function(thisRef, options) {\n\t\n\t\t\t\tvar self = thisRef;\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t\n\t\t\t\t/**\n\t\t\t\t * Appends an element as a child (with raw HTML).\n\t\t\t\t *\n\t\t\t\t * @param {string} html_container\n\t\t\t\t * @param {string} html_element\n\t\t\t\t * @return {string}\n\t\t\t\t */\n\t\t\t\tvar append = function(html_container, html_element) {\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\n\t\t\t\t};\n\t\n\t\t\t\tthisRef.setup = (function() {\n\t\t\t\t\tvar original = self.setup;\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\t// override the item rendering method to add the button to each\n\t\t\t\t\t\tif (options.append) {\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\n\t\n\t\t\t\t\t\t// add event listener\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (self.isLocked) return;\n\t\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\n\t\t\t\t\t\t\tself.setActiveItem($item);\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t};\n\t\t\t\t})();\n\t\t\t};\n\t\n\t\t\tif (this.settings.mode === 'single') {\n\t\t\t\tsingleClose(this, options);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tmultiClose(this, options);\n\t\t\t}\n\t});\n\t\n\t\n\tSelectize.define('restore_on_backspace', function(options) {\n\t\tvar self = this;\n\t\n\t\toptions.text = options.text || function(option) {\n\t\t\treturn option[this.settings.labelField];\n\t\t};\n\t\n\t\tthis.onKeyDown = (function() {\n\t\t\tvar original = self.onKeyDown;\n\t\t\treturn function(e) {\n\t\t\t\tvar index, option;\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n\t\t\t\t\tindex = this.caretPos - 1;\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\n\t\t\t\t\t\toption = this.options[this.items[index]];\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\n\t\t\t\t\t\t\tthis.refreshOptions(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn original.apply(this, arguments);\n\t\t\t};\n\t\t})();\n\t});\n\t\n\n\treturn Selectize;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/selectize/dist/js/selectize.js\n// module id = 8\n// module chunks = 0","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.Sifter = factory();\n\t}\n}(this, function() {\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t * @constructor\n\t * @param {array|object} items\n\t * @param {object} items\n\t */\n\tvar Sifter = function(items, settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t * @param {string} query\n\t * @returns {array}\n\t */\n\tSifter.prototype.tokenize = function(query) {\n\t\tquery = trim(String(query || '').toLowerCase());\n\t\tif (!query || !query.length) return [];\n\n\t\tvar i, n, regex, letter;\n\t\tvar tokens = [];\n\t\tvar words = query.split(/ +/);\n\n\t\tfor (i = 0, n = words.length; i < n; i++) {\n\t\t\tregex = escape_regex(words[i]);\n\t\t\tif (this.settings.diacritics) {\n\t\t\t\tfor (letter in DIACRITICS) {\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttokens.push({\n\t\t\t\tstring : words[i],\n\t\t\t\tregex  : new RegExp(regex, 'i')\n\t\t\t});\n\t\t}\n\n\t\treturn tokens;\n\t};\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * this.iterator(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\tSifter.prototype.iterator = function(object, callback) {\n\t\tvar iterator;\n\t\tif (is_array(object)) {\n\t\t\titerator = Array.prototype.forEach || function(callback) {\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\n\t\t\t\t\tcallback(this[i], i, this);\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\titerator = function(callback) {\n\t\t\t\tfor (var key in this) {\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(this[key], key, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\titerator.apply(object, [callback]);\n\t};\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @param {object|string} search\n\t * @param {object} options (optional)\n\t * @returns {function}\n\t */\n\tSifter.prototype.getScoreFunction = function(search, options) {\n\t\tvar self, fields, tokens, token_count, nesting;\n\n\t\tself        = this;\n\t\tsearch      = self.prepareSearch(search, options);\n\t\ttokens      = search.tokens;\n\t\tfields      = search.options.fields;\n\t\ttoken_count = tokens.length;\n\t\tnesting     = search.options.nesting;\n\n\t\t/**\n\t\t * Calculates how close of a match the\n\t\t * given value is against a search token.\n\t\t *\n\t\t * @param {mixed} value\n\t\t * @param {object} token\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreValue = function(value, token) {\n\t\t\tvar score, pos;\n\n\t\t\tif (!value) return 0;\n\t\t\tvalue = String(value || '');\n\t\t\tpos = value.search(token.regex);\n\t\t\tif (pos === -1) return 0;\n\t\t\tscore = token.string.length / value.length;\n\t\t\tif (pos === 0) score += 0.5;\n\t\t\treturn score;\n\t\t};\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t * @param {object} token\n\t\t * @param {object} data\n\t\t * @return {number}\n\t\t */\n\t\tvar scoreObject = (function() {\n\t\t\tvar field_count = fields.length;\n\t\t\tif (!field_count) {\n\t\t\t\treturn function() { return 0; };\n\t\t\t}\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token, data) {\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(token, data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\n\t\t\t\t}\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\t\tif (token_count === 1) {\n\t\t\treturn function(data) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data) {\n\t\t\t\tvar score;\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data) {\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @param {string|object} search\n\t * @param {object} options\n\t * @return function(a,b)\n\t */\n\tSifter.prototype.getSortFunction = function(search, options) {\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n\t\tself   = this;\n\t\tsearch = self.prepareSearch(search, options);\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t * @param  {string} name\n\t\t * @param  {object} result\n\t\t * @return {mixed}\n\t\t */\n\t\tget_field = function(name, result) {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\n\t\t};\n\n\t\t// parse options\n\t\tfields = [];\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tfields.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\t\tif (fields[i].field === '$score') {\n\t\t\t\t\tfields.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmultipliers = [];\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tfields_count = fields.length;\n\t\tif (!fields_count) {\n\t\t\treturn null;\n\t\t} else if (fields_count === 1) {\n\t\t\tfield = fields[0].field;\n\t\t\tmultiplier = multipliers[0];\n\t\t\treturn function(a, b) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a, b) {\n\t\t\t\tvar i, result, a_value, b_value, field;\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\n\t\t\t\t\tfield = fields[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.prepareSearch = function(query, options) {\n\t\tif (typeof query === 'object') return query;\n\n\t\toptions = extend({}, options);\n\n\t\tvar option_fields     = options.fields;\n\t\tvar option_sort       = options.sort;\n\t\tvar option_sort_empty = options.sort_empty;\n\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n\t\treturn {\n\t\t\toptions : options,\n\t\t\tquery   : String(query || '').toLowerCase(),\n\t\t\ttokens  : this.tokenize(query),\n\t\t\ttotal   : 0,\n\t\t\titems   : []\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t * The `options` parameter can contain:\n\t *\n\t *   - fields {string|array}\n\t *   - sort {array}\n\t *   - score {function}\n\t *   - filter {bool}\n\t *   - limit {integer}\n\t *\n\t * Returns an object containing:\n\t *\n\t *   - options {object}\n\t *   - query {string}\n\t *   - tokens {array}\n\t *   - total {int}\n\t *   - items {array}\n\t *\n\t * @param {string} query\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\tSifter.prototype.search = function(query, options) {\n\t\tvar self = this, value, score, search, calculateScore;\n\t\tvar fn_sort;\n\t\tvar fn_score;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tfn_score = options.score || self.getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.iterator(self.items, function(item, id) {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tfn_sort = self.getSortFunction(search, options);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n\n\t// utilities\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\tvar cmp = function(a, b) {\n\t\tif (typeof a === 'number' && typeof b === 'number') {\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t}\n\t\ta = asciifold(String(a || ''));\n\t\tb = asciifold(String(b || ''));\n\t\tif (a > b) return 1;\n\t\tif (b > a) return -1;\n\t\treturn 0;\n\t};\n\n\tvar extend = function(a, b) {\n\t\tvar i, n, k, object;\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\n\t\t\tobject = arguments[i];\n\t\t\tif (!object) continue;\n\t\t\tfor (k in object) {\n\t\t\t\tif (object.hasOwnProperty(k)) {\n\t\t\t\t\ta[k] = object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t};\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @param  {Boolean} nesting Handle nesting or not\n\t * @return {Object}          The resolved property value\n\t */\n\tvar getattr = function(obj, name, nesting) {\n\t    if (!obj || !name) return;\n\t    if (!nesting) return obj[name];\n\t    var names = name.split(\".\");\n\t    while(names.length && (obj = obj[names.shift()]));\n\t    return obj;\n\t};\n\n\tvar trim = function(str) {\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\n\t};\n\n\tvar escape_regex = function(str) {\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t};\n\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\n\t};\n\n\tvar DIACRITICS = {\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\n\t\t'f': '[fƑƒḞḟ]',\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\n\t\t'x': '[xẌẍẊẋχ]',\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\n\t};\n\n\tvar asciifold = (function() {\n\t\tvar i, n, k, chunk;\n\t\tvar foreignletters = '';\n\t\tvar lookup = {};\n\t\tfor (k in DIACRITICS) {\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n\t\t\t\tforeignletters += chunk;\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\n\t\treturn function(str) {\n\t\t\treturn str.replace(regexp, function(foreignletter) {\n\t\t\t\treturn lookup[foreignletter];\n\t\t\t}).toLowerCase();\n\t\t};\n\t})();\n\n\n\t// export\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\treturn Sifter;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sifter/sifter.js\n// module id = 9\n// module chunks = 0","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./main.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4787ef3e\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./main.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.vue\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}